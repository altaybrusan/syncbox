;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/24/2015 2:31:31 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF44  	GOTO        136
_interrupt:
;Interrupt On Change.c,39 :: 		void interrupt(){              // Interrupt rutine
;Interrupt On Change.c,40 :: 		if(RBIF_bit == 1 ) {         // Checks for Receive Interrupt Flag bit
0x0008	0xA0F2      	BTFSS       RBIF_bit, BitPos(RBIF_bit+0) 
0x000A	0xD012      	BRA         L_interrupt0
;Interrupt On Change.c,41 :: 		flag  = 1;                 // Set local interrupt flag
0x000C	0x8015      	BSF         _flag, BitPos(_flag+0) 
;Interrupt On Change.c,42 :: 		RBIF_bit = 0;              // Clear Interrupt Flag
0x000E	0x90F2      	BCF         RBIF_bit, BitPos(RBIF_bit+0) 
;Interrupt On Change.c,43 :: 		if (PORTB.F7 == 1){        // Checks if the RB7 is pressed
0x0010	0xAE81      	BTFSS       PORTB, 7 
0x0012	0xD002      	BRA         L_interrupt1
;Interrupt On Change.c,44 :: 		pressedButton = 7;
0x0014	0x0E07      	MOVLW       7
0x0016	0x6E16      	MOVWF       _pressedButton 
;Interrupt On Change.c,45 :: 		}
L_interrupt1:
;Interrupt On Change.c,46 :: 		if (PORTB.F6 == 1){        // Checks if the RB6 is pressed
0x0018	0xAC81      	BTFSS       PORTB, 6 
0x001A	0xD002      	BRA         L_interrupt2
;Interrupt On Change.c,47 :: 		pressedButton = 6;
0x001C	0x0E06      	MOVLW       6
0x001E	0x6E16      	MOVWF       _pressedButton 
;Interrupt On Change.c,48 :: 		}
L_interrupt2:
;Interrupt On Change.c,49 :: 		if (PORTB.F5 == 1){        // Checks if the RB5 is pressed
0x0020	0xAA81      	BTFSS       PORTB, 5 
0x0022	0xD002      	BRA         L_interrupt3
;Interrupt On Change.c,50 :: 		pressedButton = 5;
0x0024	0x0E05      	MOVLW       5
0x0026	0x6E16      	MOVWF       _pressedButton 
;Interrupt On Change.c,51 :: 		}
L_interrupt3:
;Interrupt On Change.c,52 :: 		if (PORTB.F4 == 1){        // Checks if the RB4 is pressed
0x0028	0xA881      	BTFSS       PORTB, 4 
0x002A	0xD002      	BRA         L_interrupt4
;Interrupt On Change.c,53 :: 		pressedButton = 4;
0x002C	0x0E04      	MOVLW       4
0x002E	0x6E16      	MOVWF       _pressedButton 
;Interrupt On Change.c,54 :: 		}
L_interrupt4:
;Interrupt On Change.c,55 :: 		}
L_interrupt0:
;Interrupt On Change.c,56 :: 		}
L_end_interrupt:
L__interrupt16:
0x0030	0x0011      	RETFIE      1
; end of _interrupt
_Delay150:
;Flash_functions.c,5 :: 		void Delay150() {
;Flash_functions.c,6 :: 		Delay_ms(150);                // Waits for 150 ms
0x0032	0x0EC3      	MOVLW       195
0x0034	0x6E0C      	MOVWF       R12, 0
0x0036	0x0ECD      	MOVLW       205
0x0038	0x6E0D      	MOVWF       R13, 0
L_Delay1501:
0x003A	0x2E0D      	DECFSZ      R13, 1, 0
0x003C	0xD7FE      	BRA         L_Delay1501
0x003E	0x2E0C      	DECFSZ      R12, 1, 0
0x0040	0xD7FC      	BRA         L_Delay1501
;Flash_functions.c,7 :: 		}
L_end_Delay150:
0x0042	0x0012      	RETURN      0
; end of _Delay150
_Delay250:
;Flash_functions.c,1 :: 		void Delay250() {
;Flash_functions.c,2 :: 		Delay_ms(250);                // Waits for 250 ms
0x0044	0x0E02      	MOVLW       2
0x0046	0x6E0B      	MOVWF       R11, 0
0x0048	0x0E45      	MOVLW       69
0x004A	0x6E0C      	MOVWF       R12, 0
0x004C	0x0EA9      	MOVLW       169
0x004E	0x6E0D      	MOVWF       R13, 0
L_Delay2500:
0x0050	0x2E0D      	DECFSZ      R13, 1, 0
0x0052	0xD7FE      	BRA         L_Delay2500
0x0054	0x2E0C      	DECFSZ      R12, 1, 0
0x0056	0xD7FC      	BRA         L_Delay2500
0x0058	0x2E0B      	DECFSZ      R11, 1, 0
0x005A	0xD7FA      	BRA         L_Delay2500
0x005C	0x0000      	NOP
0x005E	0x0000      	NOP
;Flash_functions.c,3 :: 		}
L_end_Delay250:
0x0060	0x0012      	RETURN      0
; end of _Delay250
_FlashIt:
;Flash_functions.c,9 :: 		void FlashIt(char hexCode){     // Flashes LEDs two times
;Flash_functions.c,10 :: 		LATD = hexCode;               // Writes hex to to PORTD
0x0062	0xFF8CC017  	MOVFF       FARG_FlashIt_hexCode, LATD
;Flash_functions.c,11 :: 		Delay150();                   // Short pause
0x0066	0xDFE5      	RCALL       _Delay150
;Flash_functions.c,12 :: 		LATD = 0;                     // Clears PORTD
0x0068	0x6A8C      	CLRF        LATD 
;Flash_functions.c,13 :: 		Delay250(); Delay250();       // Pause
0x006A	0xDFEC      	RCALL       _Delay250
0x006C	0xDFEB      	RCALL       _Delay250
;Flash_functions.c,14 :: 		LATD = hexCode;               // Writes hex to to PORTD second time
0x006E	0xFF8CC017  	MOVFF       FARG_FlashIt_hexCode, LATD
;Flash_functions.c,15 :: 		Delay150();                   // Short pause
0x0072	0xDFDF      	RCALL       _Delay150
;Flash_functions.c,16 :: 		LATD = 0;                     // Clears PORTD
0x0074	0x6A8C      	CLRF        LATD 
;Flash_functions.c,17 :: 		Delay250(); Delay250();       // Pause
0x0076	0xDFE6      	RCALL       _Delay250
0x0078	0xDFE5      	RCALL       _Delay250
;Flash_functions.c,18 :: 		LATD = hexCode;               // Writes hex to to PORTD second time
0x007A	0xFF8CC017  	MOVFF       FARG_FlashIt_hexCode, LATD
;Flash_functions.c,19 :: 		Delay150();                   // Short pause
0x007E	0xDFD9      	RCALL       _Delay150
;Flash_functions.c,20 :: 		LATD = 0;                     // Clears PORTD
0x0080	0x6A8C      	CLRF        LATD 
;Flash_functions.c,21 :: 		Delay250(); Delay250();       // Pause
0x0082	0xDFE0      	RCALL       _Delay250
0x0084	0xDFDF      	RCALL       _Delay250
;Flash_functions.c,23 :: 		}
L_end_FlashIt:
0x0086	0x0012      	RETURN      0
; end of _FlashIt
_main:
;Interrupt On Change.c,58 :: 		void main() {                  // Varialbe initialisation
;Interrupt On Change.c,59 :: 		flag          = 0;           // Varialbe initialisation
0x0088	0x9015      	BCF         _flag, BitPos(_flag+0) 
;Interrupt On Change.c,60 :: 		pressedButton = 0;
0x008A	0x6A16      	CLRF        _pressedButton 
;Interrupt On Change.c,62 :: 		ADCON1 = 0b00001111;         // Configure all PORT pins as digital
0x008C	0x0E0F      	MOVLW       15
0x008E	0x6EC1      	MOVWF       ADCON1 
;Interrupt On Change.c,63 :: 		TRISB  = 0b11111111;;        // Set PORT B as input
0x0090	0x0EFF      	MOVLW       255
0x0092	0x6E93      	MOVWF       TRISB 
;Interrupt On Change.c,64 :: 		LATD   = 0b00000000;         // Set all pin on PORT D Low
0x0094	0x6A8C      	CLRF        LATD 
;Interrupt On Change.c,65 :: 		TRISD  = 0;                  // Set PORT D as output
0x0096	0x6A95      	CLRF        TRISD 
;Interrupt On Change.c,66 :: 		RBIE_bit  = 1;               // Enable Port B Interrupt-On-Change
0x0098	0x86F2      	BSF         RBIE_bit, BitPos(RBIE_bit+0) 
;Interrupt On Change.c,67 :: 		RBIF_bit  = 0;               // Clear IOC flag
0x009A	0x90F2      	BCF         RBIF_bit, BitPos(RBIF_bit+0) 
;Interrupt On Change.c,68 :: 		GIE_bit   = 1;               // Enable GLOBAL interrupts
0x009C	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;Interrupt On Change.c,71 :: 		while(1) {
L_main5:
;Interrupt On Change.c,73 :: 		if(flag) {
0x009E	0xA015      	BTFSS       _flag, BitPos(_flag+0) 
0x00A0	0xD024      	BRA         L_main7
;Interrupt On Change.c,74 :: 		switch(pressedButton) {  // Depending on value(button pressed), calls FleshIt function with different argument
0x00A2	0xD015      	BRA         L_main8
;Interrupt On Change.c,75 :: 		case 4:
L_main10:
;Interrupt On Change.c,76 :: 		FlashIt(0x03);
0x00A4	0x0E03      	MOVLW       3
0x00A6	0x6E17      	MOVWF       FARG_FlashIt_hexCode 
0x00A8	0xDFDC      	RCALL       _FlashIt
;Interrupt On Change.c,77 :: 		pressedButton = 0;
0x00AA	0x6A16      	CLRF        _pressedButton 
;Interrupt On Change.c,78 :: 		break;
0x00AC	0xD01D      	BRA         L_main9
;Interrupt On Change.c,79 :: 		case 5:
L_main11:
;Interrupt On Change.c,80 :: 		FlashIt(0x0C);
0x00AE	0x0E0C      	MOVLW       12
0x00B0	0x6E17      	MOVWF       FARG_FlashIt_hexCode 
0x00B2	0xDFD7      	RCALL       _FlashIt
;Interrupt On Change.c,81 :: 		pressedButton = 0;
0x00B4	0x6A16      	CLRF        _pressedButton 
;Interrupt On Change.c,82 :: 		break;
0x00B6	0xD018      	BRA         L_main9
;Interrupt On Change.c,83 :: 		case 6:
L_main12:
;Interrupt On Change.c,84 :: 		FlashIt(0x30);
0x00B8	0x0E30      	MOVLW       48
0x00BA	0x6E17      	MOVWF       FARG_FlashIt_hexCode 
0x00BC	0xDFD2      	RCALL       _FlashIt
;Interrupt On Change.c,85 :: 		pressedButton = 0;
0x00BE	0x6A16      	CLRF        _pressedButton 
;Interrupt On Change.c,86 :: 		break;
0x00C0	0xD013      	BRA         L_main9
;Interrupt On Change.c,87 :: 		case 7:
L_main13:
;Interrupt On Change.c,88 :: 		FlashIt(0xC0);
0x00C2	0x0EC0      	MOVLW       192
0x00C4	0x6E17      	MOVWF       FARG_FlashIt_hexCode 
0x00C6	0xDFCD      	RCALL       _FlashIt
;Interrupt On Change.c,89 :: 		pressedButton = 0;
0x00C8	0x6A16      	CLRF        _pressedButton 
;Interrupt On Change.c,90 :: 		break;
0x00CA	0xD00E      	BRA         L_main9
;Interrupt On Change.c,91 :: 		default:
L_main14:
;Interrupt On Change.c,95 :: 		break;
0x00CC	0xD00D      	BRA         L_main9
;Interrupt On Change.c,96 :: 		}
L_main8:
0x00CE	0x5016      	MOVF        _pressedButton, 0 
0x00D0	0x0A04      	XORLW       4
0x00D2	0xE0E8      	BZ          L_main10
0x00D4	0x5016      	MOVF        _pressedButton, 0 
0x00D6	0x0A05      	XORLW       5
0x00D8	0xE0EA      	BZ          L_main11
0x00DA	0x5016      	MOVF        _pressedButton, 0 
0x00DC	0x0A06      	XORLW       6
0x00DE	0xE0EC      	BZ          L_main12
0x00E0	0x5016      	MOVF        _pressedButton, 0 
0x00E2	0x0A07      	XORLW       7
0x00E4	0xE0EE      	BZ          L_main13
0x00E6	0xD7F2      	BRA         L_main14
L_main9:
;Interrupt On Change.c,97 :: 		flag = 0;                 // Reset flag variable
0x00E8	0x9015      	BCF         _flag, BitPos(_flag+0) 
;Interrupt On Change.c,98 :: 		}
L_main7:
;Interrupt On Change.c,99 :: 		}
0x00EA	0xD7D9      	BRA         L_main5
;Interrupt On Change.c,100 :: 		}
L_end_main:
0x00EC	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [42]    _interrupt
0x0032      [18]    _Delay150
0x0044      [30]    _Delay250
0x0062      [38]    _FlashIt
0x0088     [102]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [0]    _flag
0x0016       [1]    _pressedButton
0x0017       [1]    FARG_FlashIt_hexCode
0x0F81       [1]    PORTB
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    RBIF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_Delay2500
  L_Delay1501
  L_end_Delay250
  _Delay250
  L_end_Delay150
  _Delay150
  L_end_FlashIt
  _FlashIt
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_end_interrupt
  _interrupt
  L__interrupt16
  L_end_main
  _main
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_end_interrupt
  _interrupt
  L__interrupt16
  L_end_main
  _main
