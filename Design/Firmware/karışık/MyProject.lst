;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/29/2015 5:03:08 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x00000004039C  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x039C	0x21030F  	MOV	#4144, W15
0x039E	0x27FFF0  	MOV	#32767, W0
0x03A0	0xB7A020  	MOV	WREG, SPLIM
0x03A2	0x202010  	MOV	#513, W0
0x03A4	0xB7A032  	MOV	WREG, DSRPAG
0x03A6	0x200040  	MOV	#4, W0
0x03A8	0xB72044  	IOR	CORCON
0x03AA	0x00000002046A  	CALL	1130
;MyProject.c,28 :: 		void main(){
;MyProject.c,30 :: 		PLLFBD = 70;             // PLL multiplier M=70
0x03AE	0x781F8A  	PUSH	W10
0x03B0	0x781F8B  	PUSH	W11
0x03B2	0x781F8C  	PUSH	W12
0x03B4	0x200460  	MOV	#70, W0
0x03B6	0xB7A746  	MOV	WREG, PLLFBD
;MyProject.c,31 :: 		CLKDIV = 0x0000;         // PLL prescaler N1=2, PLL postscaler N2=2
0x03B8	0xEF2744  	CLR	CLKDIV
;MyProject.c,33 :: 		ANSELA = 0x00;           // Convert all I/O pins to digital
0x03BA	0xEF2E0E  	CLR	ANSELA
;MyProject.c,34 :: 		ANSELB = 0x00;
0x03BC	0xEF2E1E  	CLR	ANSELB
;MyProject.c,35 :: 		ANSELC = 0x00;
0x03BE	0xEF2E2E  	CLR	ANSELC
;MyProject.c,36 :: 		ANSELD = 0x00;
0x03C0	0xEF2E3E  	CLR	ANSELD
;MyProject.c,37 :: 		ANSELE = 0x00;
0x03C2	0xEF2E4E  	CLR	ANSELE
;MyProject.c,38 :: 		ANSELG = 0x00;
0x03C4	0xEF2E6E  	CLR	ANSELG
;MyProject.c,41 :: 		Lcd_Init();                        // Initialize LCD
0x03C6	0x07FFB5  	RCALL	_Lcd_Init
;MyProject.c,43 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x03C8	0xB3C01A  	MOV.B	#1, W10
0x03CA	0x07FF7D  	RCALL	_Lcd_Cmd
;MyProject.c,44 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x03CC	0xB3C0CA  	MOV.B	#12, W10
0x03CE	0x07FF7B  	RCALL	_Lcd_Cmd
;MyProject.c,45 :: 		Lcd_Out(1,6,txt3);                 // Write text in first row
0x03D0	0x21025C  	MOV	#lo_addr(_txt3), W12
0x03D2	0x20006B  	MOV	#6, W11
0x03D4	0x20001A  	MOV	#1, W10
0x03D6	0x07FF41  	RCALL	_Lcd_Out
;MyProject.c,47 :: 		Lcd_Out(2,6,txt4);                 // Write text in second row
0x03D8	0x21011C  	MOV	#lo_addr(_txt4), W12
0x03DA	0x20006B  	MOV	#6, W11
0x03DC	0x20002A  	MOV	#2, W10
0x03DE	0x07FF3D  	RCALL	_Lcd_Out
;MyProject.c,48 :: 		Delay_ms(2000);
0x03E0	0x201AC8  	MOV	#428, W8
0x03E2	0x240007  	MOV	#16384, W7
L_main2:
0x03E4	0xED200E  	DEC	W7
0x03E6	0x3AFFFE  	BRA NZ	L_main2
0x03E8	0xED2010  	DEC	W8
0x03EA	0x3AFFFC  	BRA NZ	L_main2
;MyProject.c,49 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x03EC	0xB3C01A  	MOV.B	#1, W10
0x03EE	0x07FF6B  	RCALL	_Lcd_Cmd
;MyProject.c,51 :: 		Lcd_Out(1,1,txt1);                 // Write text in first row
0x03F0	0x21000C  	MOV	#lo_addr(_txt1), W12
0x03F2	0x20001B  	MOV	#1, W11
0x03F4	0x20001A  	MOV	#1, W10
0x03F6	0x07FF31  	RCALL	_Lcd_Out
;MyProject.c,52 :: 		Lcd_Out(2,5,txt2);                 // Write text in second row
0x03F8	0x21019C  	MOV	#lo_addr(_txt2), W12
0x03FA	0x20005B  	MOV	#5, W11
0x03FC	0x20002A  	MOV	#2, W10
0x03FE	0x07FF2D  	RCALL	_Lcd_Out
;MyProject.c,54 :: 		Delay_ms(2000);
0x0400	0x201AC8  	MOV	#428, W8
0x0402	0x240007  	MOV	#16384, W7
L_main4:
0x0404	0xED200E  	DEC	W7
0x0406	0x3AFFFE  	BRA NZ	L_main4
0x0408	0xED2010  	DEC	W8
0x040A	0x3AFFFC  	BRA NZ	L_main4
;MyProject.c,57 :: 		for(i=0; i<4; i++) {               // Move text to the right 4 times
0x040C	0x2102D1  	MOV	#lo_addr(_i), W1
0x040E	0xEF2000  	CLR	W0
0x0410	0x784880  	MOV.B	W0, [W1]
L_main6:
0x0412	0x2102D0  	MOV	#lo_addr(_i), W0
0x0414	0x784010  	MOV.B	[W0], W0
0x0416	0xE10464  	CP.B	W0, #4
0x0418	0x310007  	BRA GEU	L_main7
L__main19:
;MyProject.c,58 :: 		Lcd_Cmd(_LCD_SHIFT_RIGHT);
0x041A	0xB3C1CA  	MOV.B	#28, W10
0x041C	0x07FF54  	RCALL	_Lcd_Cmd
;MyProject.c,59 :: 		Move_Delay();
0x041E	0x07FF4A  	RCALL	_Move_Delay
;MyProject.c,57 :: 		for(i=0; i<4; i++) {               // Move text to the right 4 times
0x0420	0xB3C011  	MOV.B	#1, W1
0x0422	0x2102D0  	MOV	#lo_addr(_i), W0
0x0424	0x40C810  	ADD.B	W1, [W0], [W0]
;MyProject.c,60 :: 		}
0x0426	0x37FFF5  	BRA	L_main6
L_main7:
;MyProject.c,62 :: 		while(1) {                         // Endless loop
L_main9:
;MyProject.c,63 :: 		for(i=0; i<8; i++) {             // Move text to the left 7 times
0x0428	0x2102D1  	MOV	#lo_addr(_i), W1
0x042A	0xEF2000  	CLR	W0
0x042C	0x784880  	MOV.B	W0, [W1]
L_main11:
0x042E	0x2102D0  	MOV	#lo_addr(_i), W0
0x0430	0x784010  	MOV.B	[W0], W0
0x0432	0xE10468  	CP.B	W0, #8
0x0434	0x310007  	BRA GEU	L_main12
L__main20:
;MyProject.c,64 :: 		Lcd_Cmd(_LCD_SHIFT_LEFT);
0x0436	0xB3C18A  	MOV.B	#24, W10
0x0438	0x07FF46  	RCALL	_Lcd_Cmd
;MyProject.c,65 :: 		Move_Delay();
0x043A	0x07FF3C  	RCALL	_Move_Delay
;MyProject.c,63 :: 		for(i=0; i<8; i++) {             // Move text to the left 7 times
0x043C	0xB3C011  	MOV.B	#1, W1
0x043E	0x2102D0  	MOV	#lo_addr(_i), W0
0x0440	0x40C810  	ADD.B	W1, [W0], [W0]
;MyProject.c,66 :: 		}
0x0442	0x37FFF5  	BRA	L_main11
L_main12:
;MyProject.c,68 :: 		for(i=0; i<8; i++) {             // Move text to the right 7 times
0x0444	0x2102D1  	MOV	#lo_addr(_i), W1
0x0446	0xEF2000  	CLR	W0
0x0448	0x784880  	MOV.B	W0, [W1]
L_main14:
0x044A	0x2102D0  	MOV	#lo_addr(_i), W0
0x044C	0x784010  	MOV.B	[W0], W0
0x044E	0xE10468  	CP.B	W0, #8
0x0450	0x310007  	BRA GEU	L_main15
L__main21:
;MyProject.c,69 :: 		Lcd_Cmd(_LCD_SHIFT_RIGHT);
0x0452	0xB3C1CA  	MOV.B	#28, W10
0x0454	0x07FF38  	RCALL	_Lcd_Cmd
;MyProject.c,70 :: 		Move_Delay();
0x0456	0x07FF2E  	RCALL	_Move_Delay
;MyProject.c,68 :: 		for(i=0; i<8; i++) {             // Move text to the right 7 times
0x0458	0xB3C011  	MOV.B	#1, W1
0x045A	0x2102D0  	MOV	#lo_addr(_i), W0
0x045C	0x40C810  	ADD.B	W1, [W0], [W0]
;MyProject.c,71 :: 		}
0x045E	0x37FFF5  	BRA	L_main14
L_main15:
;MyProject.c,72 :: 		}
0x0460	0x37FFE3  	BRA	L_main9
;MyProject.c,73 :: 		}
L_end_main:
0x0462	0x78064F  	POP	W12
0x0464	0x7805CF  	POP	W11
0x0466	0x78054F  	POP	W10
L__main_end_loop:
0x0468	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_Lcd_Init:
0x0332	0xFA0000  	LNK	#0
;__Lib_Lcd.c,105 :: 		
;__Lib_Lcd.c,107 :: 		
0x0334	0x07FF82  	RCALL	_Delay_8ms
0x0336	0x07FF81  	RCALL	_Delay_8ms
;__Lib_Lcd.c,109 :: 		
0x0338	0xA96E30  	BCLR	LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,110 :: 		
0x033A	0xA94E30  	BCLR	LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,111 :: 		
0x033C	0xA98E30  	BCLR	LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,112 :: 		
0x033E	0xA9AE30  	BCLR	LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,113 :: 		
0x0340	0xA9CE30  	BCLR	LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,114 :: 		
0x0342	0xA9EE30  	BCLR	LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,116 :: 		
0x0344	0xA96E34  	BCLR	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,117 :: 		
0x0346	0xA94E34  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,118 :: 		
0x0348	0xA9EE34  	BCLR	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,119 :: 		
0x034A	0xA9CE34  	BCLR	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,120 :: 		
0x034C	0xA9AE34  	BCLR	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,121 :: 		
0x034E	0xA98E34  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,130 :: 		
0x0350	0xA8AE34  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,131 :: 		
0x0352	0xA88E34  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,132 :: 		
0x0354	0x07FF7B  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,133 :: 		
0x0356	0x07FF5A  	RCALL	_Delay_5500us
;__Lib_Lcd.c,136 :: 		
0x0358	0x07FF79  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,137 :: 		
0x035A	0x07FF58  	RCALL	_Delay_5500us
;__Lib_Lcd.c,140 :: 		
0x035C	0x07FF77  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,141 :: 		
0x035E	0x07FF56  	RCALL	_Delay_5500us
;__Lib_Lcd.c,144 :: 		
0x0360	0xA98E34  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,145 :: 		
0x0362	0x07FF74  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,146 :: 		
0x0364	0x07FF53  	RCALL	_Delay_5500us
;__Lib_Lcd.c,149 :: 		
0x0366	0x07FF72  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,151 :: 		
0x0368	0xA9AE34  	BCLR	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,152 :: 		
0x036A	0xA8EE34  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,153 :: 		
0x036C	0x07FF6F  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,154 :: 		
0x036E	0x07FF4E  	RCALL	_Delay_5500us
;__Lib_Lcd.c,157 :: 		
0x0370	0xA9EE34  	BCLR	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,158 :: 		
0x0372	0xA88E34  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,159 :: 		
0x0374	0x07FF6B  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,161 :: 		
0x0376	0xA98E34  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,162 :: 		
0x0378	0x07FF69  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,163 :: 		
0x037A	0x07FF48  	RCALL	_Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x037C	0x07FF67  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,168 :: 		
0x037E	0xA88E34  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,169 :: 		
0x0380	0x07FF65  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,170 :: 		
0x0382	0x07FF44  	RCALL	_Delay_5500us
;__Lib_Lcd.c,173 :: 		
0x0384	0xA98E34  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,174 :: 		
0x0386	0x07FF62  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,176 :: 		
0x0388	0xA8EE34  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,177 :: 		
0x038A	0xA8CE34  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,178 :: 		
0x038C	0xA8AE34  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,179 :: 		
0x038E	0xA88E34  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,180 :: 		
0x0390	0x07FF5D  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,181 :: 		
0x0392	0x07FF3C  	RCALL	_Delay_5500us
;__Lib_Lcd.c,183 :: 		
0x0394	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0396	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,184 :: 		
L_end_Lcd_Init:
0x0398	0xFA8000  	ULNK
0x039A	0x060000  	RETURN
; end of _Lcd_Init
_Delay_8ms:
;__Lib_Delays_ep.c,608 :: 		void Delay_8ms()
;__Lib_Delays_ep.c,610 :: 		Delay_ms(8);
0x023A	0x200028  	MOV	#2, W8
0x023C	0x2B5807  	MOV	#46464, W7
L_Delay_8ms25:
0x023E	0xED200E  	DEC	W7
0x0240	0x3AFFFE  	BRA NZ	L_Delay_8ms25
0x0242	0xED2010  	DEC	W8
0x0244	0x3AFFFC  	BRA NZ	L_Delay_8ms25
0x0246	0x000000  	NOP
0x0248	0x000000  	NOP
;__Lib_Delays_ep.c,611 :: 		}
L_end_Delay_8ms:
0x024A	0x060000  	RETURN
; end of _Delay_8ms
__Lib_Lcd_Strobe:
0x024C	0xFA0000  	LNK	#0
;__Lib_Lcd.c,26 :: 		
;__Lib_Lcd.c,27 :: 		
0x024E	0xA86E34  	BSET	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,28 :: 		
0x0250	0x07FFD7  	RCALL	_Delay_1us
;__Lib_Lcd.c,29 :: 		
0x0252	0xA96E34  	BCLR	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,30 :: 		
0x0254	0x07FFD5  	RCALL	_Delay_1us
;__Lib_Lcd.c,31 :: 		
L_end_Strobe:
0x0256	0xFA8000  	ULNK
0x0258	0x060000  	RETURN
; end of __Lib_Lcd_Strobe
_Delay_1us:
;__Lib_Delays_ep.c,374 :: 		void Delay_1us()
;__Lib_Delays_ep.c,376 :: 		Delay_us(1);
0x0200	0x2000E7  	MOV	#14, W7
L_Delay_1us7:
0x0202	0xED200E  	DEC	W7
0x0204	0x3AFFFE  	BRA NZ	L_Delay_1us7
0x0206	0x000000  	NOP
0x0208	0x000000  	NOP
;__Lib_Delays_ep.c,377 :: 		}
L_end_Delay_1us:
0x020A	0x060000  	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays_ep.c,530 :: 		void Delay_5500us()
;__Lib_Delays_ep.c,532 :: 		Delay_us(5500);
0x020C	0x200028  	MOV	#2, W8
0x020E	0x22CC87  	MOV	#11464, W7
L_Delay_5500us19:
0x0210	0xED200E  	DEC	W7
0x0212	0x3AFFFE  	BRA NZ	L_Delay_5500us19
0x0214	0xED2010  	DEC	W8
0x0216	0x3AFFFC  	BRA NZ	L_Delay_5500us19
0x0218	0x000000  	NOP
0x021A	0x000000  	NOP
;__Lib_Delays_ep.c,533 :: 		}
L_end_Delay_5500us:
0x021C	0x060000  	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
0x02C6	0xFA0000  	LNK	#0
;__Lib_Lcd.c,38 :: 		
;__Lib_Lcd.c,40 :: 		
; loc_word start address is: 2 (W1)
0x02C8	0xFB808A  	ZE	W10, W1
;__Lib_Lcd.c,42 :: 		
0x02CA	0xAEE002  	BTSS	W1, #7
0x02CC	0xA9EE34  	BCLR	LCD_D7, BitPos(LCD_D7+0)
0x02CE	0xAFE002  	BTSC	W1, #7
0x02D0	0xA8EE34  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,43 :: 		
0x02D2	0xAEC002  	BTSS	W1, #6
0x02D4	0xA9CE34  	BCLR	LCD_D6, BitPos(LCD_D6+0)
0x02D6	0xAFC002  	BTSC	W1, #6
0x02D8	0xA8CE34  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,44 :: 		
0x02DA	0xAEA002  	BTSS	W1, #5
0x02DC	0xA9AE34  	BCLR	LCD_D5, BitPos(LCD_D5+0)
0x02DE	0xAFA002  	BTSC	W1, #5
0x02E0	0xA8AE34  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,45 :: 		
0x02E2	0xAE8002  	BTSS	W1, #4
0x02E4	0xA98E34  	BCLR	LCD_D4, BitPos(LCD_D4+0)
0x02E6	0xAF8002  	BTSC	W1, #4
0x02E8	0xA88E34  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,47 :: 		
0x02EA	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x02EC	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x02EE	0xA84E34  	BSET	LCD_RS, BitPos(LCD_RS+0)
0x02F0	0xA70010  	BTSC	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x02F2	0xA94E34  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,49 :: 		
0x02F4	0x07FFAB  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,51 :: 		
0x02F6	0xAE6002  	BTSS	W1, #3
0x02F8	0xA9EE34  	BCLR	LCD_D7, BitPos(LCD_D7+0)
0x02FA	0xAF6002  	BTSC	W1, #3
0x02FC	0xA8EE34  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,52 :: 		
0x02FE	0xAE4002  	BTSS	W1, #2
0x0300	0xA9CE34  	BCLR	LCD_D6, BitPos(LCD_D6+0)
0x0302	0xAF4002  	BTSC	W1, #2
0x0304	0xA8CE34  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,53 :: 		
0x0306	0xAE2002  	BTSS	W1, #1
0x0308	0xA9AE34  	BCLR	LCD_D5, BitPos(LCD_D5+0)
0x030A	0xAF2002  	BTSC	W1, #1
0x030C	0xA8AE34  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,54 :: 		
0x030E	0xAE0002  	BTSS	W1, #0
0x0310	0xA98E34  	BCLR	LCD_D4, BitPos(LCD_D4+0)
0x0312	0xAF0002  	BTSC	W1, #0
0x0314	0xA88E34  	BSET	LCD_D4, BitPos(LCD_D4+0)
; loc_word end address is: 2 (W1)
;__Lib_Lcd.c,56 :: 		
0x0316	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0318	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x031A	0xA84E34  	BSET	LCD_RS, BitPos(LCD_RS+0)
0x031C	0xA70010  	BTSC	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x031E	0xA94E34  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,58 :: 		
0x0320	0x07FF95  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,60 :: 		
0x0322	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0324	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x0326	0x370002  	BRA	L_Lcd_Cmd0
;__Lib_Lcd.c,61 :: 		
0x0328	0x07FF71  	RCALL	_Delay_5500us
0x032A	0x370001  	BRA	L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,63 :: 		
0x032C	0x07FF80  	RCALL	_Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,64 :: 		
L_end_Lcd_Cmd:
0x032E	0xFA8000  	ULNK
0x0330	0x060000  	RETURN
; end of _Lcd_Cmd
_Delay_50us:
;__Lib_Delays_ep.c,452 :: 		void Delay_50us()
;__Lib_Delays_ep.c,454 :: 		Delay_us(50);
0x022E	0x202BC7  	MOV	#700, W7
L_Delay_50us13:
0x0230	0xED200E  	DEC	W7
0x0232	0x3AFFFE  	BRA NZ	L_Delay_50us13
0x0234	0x000000  	NOP
0x0236	0x000000  	NOP
;__Lib_Delays_ep.c,455 :: 		}
L_end_Delay_50us:
0x0238	0x060000  	RETURN
; end of _Delay_50us
_Lcd_Out:
0x025A	0xFA0000  	LNK	#0
;__Lib_Lcd.c,187 :: 		
;__Lib_Lcd.c,190 :: 		
0x025C	0x781F8A  	PUSH	W10
0x025E	0x37000A  	BRA	L_Lcd_Out11
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out13:
0x0260	0x20080A  	MOV	#128, W10
0x0262	0x370011  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out14:
0x0264	0x200C0A  	MOV	#192, W10
0x0266	0x37000F  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,193 :: 		
L_Lcd_Out15:
0x0268	0x20094A  	MOV	#148, W10
0x026A	0x37000D  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,194 :: 		
L_Lcd_Out16:
0x026C	0x200D4A  	MOV	#212, W10
0x026E	0x37000B  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,195 :: 		
L_Lcd_Out17:
0x0270	0x20080A  	MOV	#128, W10
;__Lib_Lcd.c,196 :: 		
0x0272	0x370009  	BRA	L_Lcd_Out12
L_Lcd_Out11:
0x0274	0xE15061  	CP	W10, #1
0x0276	0x32FFF4  	BRA Z	L_Lcd_Out13
L__Lcd_Out32:
0x0278	0xE15062  	CP	W10, #2
0x027A	0x32FFF4  	BRA Z	L_Lcd_Out14
L__Lcd_Out33:
0x027C	0xE15063  	CP	W10, #3
0x027E	0x32FFF4  	BRA Z	L_Lcd_Out15
L__Lcd_Out34:
0x0280	0xE15064  	CP	W10, #4
0x0282	0x32FFF4  	BRA Z	L_Lcd_Out16
L__Lcd_Out35:
0x0284	0x37FFF5  	BRA	L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,199 :: 		
0x0286	0x558061  	SUB	W11, #1, W0
0x0288	0x450000  	ADD	W10, W0, W0
0x028A	0x780500  	MOV	W0, W10
;__Lib_Lcd.c,201 :: 		
0x028C	0x784500  	MOV.B	W0, W10
0x028E	0x07001B  	RCALL	_Lcd_Cmd
;__Lib_Lcd.c,202 :: 		
0x0290	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0292	0xA10010  	BCLR	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,203 :: 		
; i start address is: 4 (W2)
0x0294	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Lcd.c,204 :: 		
L_Lcd_Out18:
; i start address is: 4 (W2)
0x0296	0x460002  	ADD	W12, W2, W0
0x0298	0xE00410  	CP0.B	[W0]
0x029A	0x320007  	BRA Z	L_Lcd_Out19
L__Lcd_Out36:
;__Lib_Lcd.c,205 :: 		
0x029C	0x460002  	ADD	W12, W2, W0
0x029E	0x781F8A  	PUSH	W10
0x02A0	0x784510  	MOV.B	[W0], W10
0x02A2	0x07FFBD  	RCALL	_Lcd_Chr_CP
0x02A4	0x78054F  	POP	W10
0x02A6	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x02A8	0x37FFF6  	BRA	L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,206 :: 		
0x02AA	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x02AC	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,207 :: 		
L_end_Lcd_Out:
0x02AE	0x78054F  	POP	W10
0x02B0	0xFA8000  	ULNK
0x02B2	0x060000  	RETURN
; end of _Lcd_Out
_Lcd_Chr_CP:
0x021E	0xFA0000  	LNK	#0
;__Lib_Lcd.c,67 :: 		
;__Lib_Lcd.c,69 :: 		
0x0220	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0222	0xA10010  	BCLR	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,70 :: 		
0x0224	0x070050  	RCALL	_Lcd_Cmd
;__Lib_Lcd.c,71 :: 		
0x0226	0x2102E0  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0228	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,72 :: 		
L_end_Lcd_Chr_CP:
0x022A	0xFA8000  	ULNK
0x022C	0x060000  	RETURN
; end of _Lcd_Chr_CP
_Move_Delay:
;MyProject.c,24 :: 		void Move_Delay() {                  // Function used for text moving
;MyProject.c,25 :: 		Delay_ms(500);                     // You can change the moving speed here
0x02B4	0x2006B8  	MOV	#107, W8
0x02B6	0x2CFFF7  	MOV	#53247, W7
L_Move_Delay0:
0x02B8	0xED200E  	DEC	W7
0x02BA	0x3AFFFE  	BRA NZ	L_Move_Delay0
0x02BC	0xED2010  	DEC	W8
0x02BE	0x3AFFFC  	BRA NZ	L_Move_Delay0
0x02C0	0x000000  	NOP
0x02C2	0x000000  	NOP
;MyProject.c,26 :: 		}
L_end_Move_Delay:
0x02C4	0x060000  	RETURN
; end of _Move_Delay
0x046A	0x210001  	MOV	#lo_addr(_txt1), W1
0x046C	0x280000  	MOV	#32768, W0
0x046E	0x090015  	REPEAT	#21
0x0470	0x7818B0  	MOV	[W0++], [W1++]
0x0472	0x7858B0  	MOV.B	[W0++], [W1++]
0x0474	0x060000  	RETURN
;,0 :: _initBlock_0 [45]
; Containing: ?ICS_txt1 [17]
;             ?ICS_txt4 [8]
;             ?ICS_txt2 [12]
;             ?ICS_txt3 [8]
0x8000	0x696D ;_initBlock_0+0 : ?ICS_txt1 at 0x8000
0x8002	0x726B ;_initBlock_0+2
0x8004	0x456F ;_initBlock_0+4
0x8006	0x656C ;_initBlock_0+6
0x8008	0x746B ;_initBlock_0+8
0x800A	0x6F72 ;_initBlock_0+10
0x800C	0x696E ;_initBlock_0+12
0x800E	0x616B ;_initBlock_0+14
0x8010	0x6500 ;_initBlock_0+16 : ?ICS_txt4 at 0x8011
0x8012	0x6178 ;_initBlock_0+18
0x8014	0x706D ;_initBlock_0+20
0x8016	0x656C ;_initBlock_0+22
0x8018	0x4500 ;_initBlock_0+24 : ?ICS_txt2 at 0x8019
0x801A	0x7361 ;_initBlock_0+26
0x801C	0x6479 ;_initBlock_0+28
0x801E	0x5073 ;_initBlock_0+30
0x8020	0x4349 ;_initBlock_0+32
0x8022	0x4134 ;_initBlock_0+34
0x8024	0x4C00 ;_initBlock_0+36 : ?ICS_txt3 at 0x8025
0x8026	0x6463 ;_initBlock_0+38
0x8028	0x6234 ;_initBlock_0+40
0x802A	0x7469 ;_initBlock_0+42
0x802C	0x00 ;_initBlock_0+44
; end of _initBlock_0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [12]    _Delay_1us
0x020C      [18]    _Delay_5500us
0x021E      [16]    _Lcd_Chr_CP
0x022E      [12]    _Delay_50us
0x023A      [18]    _Delay_8ms
0x024C      [14]    __Lib_Lcd_Strobe
0x025A      [90]    _Lcd_Out
0x02B4      [18]    _Move_Delay
0x02C6     [108]    _Lcd_Cmd
0x0332     [106]    _Lcd_Init
0x039C     [206]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x102E       [0]    __Lib_Lcd_cmd_status
0x102D       [1]    _i
0x0E30       [0]    LCD_RS_Direction
0x0E30       [0]    LCD_EN_Direction
0x0E6E       [2]    ANSELG
0x0E30       [0]    LCD_D4_Direction
0x0E34       [0]    LCD_D6
0x0E34       [0]    LCD_D7
0x0E34       [0]    LCD_D4
0x0E34       [0]    LCD_D5
0x0E34       [0]    LCD_RS
0x0E30       [0]    LCD_D6_Direction
0x0E30       [0]    LCD_D5_Direction
0x0E34       [0]    LCD_EN
0x0E30       [0]    LCD_D7_Direction
0x0E30       [0]    TRISD3_bit
0x0E34       [0]    LATD2_bit
0x0E30       [0]    TRISD4_bit
0x0E30       [0]    TRISD2_bit
0x0E34       [0]    LATD4_bit
0x0E34       [0]    LATD7_bit
0x0E34       [0]    LATD3_bit
0x0E34       [0]    LATD5_bit
0x0E34       [0]    LATD6_bit
0x0E30       [0]    TRISD5_bit
0x0E2E       [2]    ANSELC
0x0E1E       [2]    ANSELB
0x0E4E       [2]    ANSELE
0x0E3E       [2]    ANSELD
0x0E0E       [2]    ANSELA
0x0E30       [0]    TRISD7_bit
0x0E30       [0]    TRISD6_bit
0x0744       [2]    CLKDIV
0x0746       [2]    PLLFBD
0x1000      [17]    _txt1
0x1011       [8]    _txt4
0x1019      [12]    _txt2
0x1025       [8]    _txt3
0x0014       [1]    FARG_Lcd_Chr_CP_out_char
0x0014       [2]    FARG_Lcd_Out_row
0x0016       [2]    FARG_Lcd_Out_column
0x0018       [2]    FARG_Lcd_Out_text
0x0014       [1]    FARG_Lcd_Cmd_out_char
0x0744       [2]    CLKDIV
0x0746       [2]    PLLFBD
0x0E0E       [2]    ANSELA
0x0E1E       [2]    ANSELB
0x0E2E       [2]    ANSELC
0x0E3E       [2]    ANSELD
0x0E4E       [2]    ANSELE
0x0E6E       [2]    ANSELG
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000      [17]    ?ICS_txt1
0x8011       [8]    ?ICS_txt4
0x8019      [12]    ?ICS_txt2
0x8025       [8]    ?ICS_txt3
//** Label List: ** 
//----------------------------------------------
  L_Move_Delay0
  L_main2
  L_main4
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_end_Move_Delay
  _Move_Delay
  L_end_main
  _main
  L__main19
  L__main20
  L__main21
  L__main_end_loop
  Delay_Cyc_loop
  Delay_Cyc_rez
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_Delay_1us7
  L_Delay_10us9
  L_Delay_22us11
  L_Delay_50us13
  L_Delay_80us15
  L_Delay_500us17
  L_Delay_5500us19
  L_Delay_1ms21
  L_Delay_5ms23
  L_Delay_8ms25
  L_Delay_10ms27
  L_Delay_100ms29
  L_Delay_1sec31
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Get_Fosc_Per_Cyc
  _Get_Fosc_Per_Cyc
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_Delay_Cyc_Long
  _Delay_Cyc_Long
  L_end_VDelay_ms
  _VDelay_ms
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L_end_Delay_W0
  _Delay_W0
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Strobe
  __Lib_Lcd_Strobe
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L__Lcd_Out_CP24
  L_end_Lcd_Chr
  _Lcd_Chr
  L__Lcd_Chr26
  L__Lcd_Chr27
  L__Lcd_Chr28
  L__Lcd_Chr29
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L__Lcd_Out32
  L__Lcd_Out33
  L__Lcd_Out34
  L__Lcd_Out35
  L__Lcd_Out36
