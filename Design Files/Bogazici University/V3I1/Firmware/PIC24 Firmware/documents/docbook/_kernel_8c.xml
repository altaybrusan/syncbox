<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_kernel_8c">
    <title>Kernel.c File Reference</title>
    <programlisting>#include &quot;kernel.h&quot;</programlisting>
    <programlisting>#include &quot;jsmn.h&quot;</programlisting>
    <programlisting>#include &quot;ConnectionMap.h&quot;</programlisting>
    <programlisting>#include &quot;PIC24eDef.h&quot;</programlisting>
    <programlisting>#include &lt;stdbool.h&gt;</programlisting>
<para>Include dependency diagram for Kernel.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="_kernel_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for Kernel.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="_kernel_8c__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title> Data Structures </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link></para>
<para><emphasis>Kernal internal data structure.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const int <link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link><para><emphasis>Amount of buffer for each device type.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const int <link linkend="_kernel_8c_1aed005504e2719145cb789100005b650b">JSON_TOKEN_CARDINALITY</link><para><emphasis>Maximum amount of JSON tokens in a message.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const int <link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link><para><emphasis>Maximum message size.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> <link linkend="_kernel_8c_1ab1a887fd4bcd916fb3d84abdb4d655d4">Uart1ReceiveBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KERNEL_FRAME for uart1.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1afe0dd5676314b5ed5d547a671e9a2c30">Uart1RcivBufRdPtr</link><para><emphasis>UART1 received buffer read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a7a2438664f1cb67837e070d7c4da6ccc">Uart1RcivBufWrPtr</link><para><emphasis>UART1 received buffer write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> <link linkend="_kernel_8c_1a9a3fdabb4306658c4c597099d690e7ea">Uart2ReceiveBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KERNEL_FRAME for uart2.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a896503a45cde815b86bef2ad724e454e">Uart2RcivBufRdPtr</link><para><emphasis>UART2 received buffer read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a343aa6e0e887dbc857fa45f632949d56">Uart2RcivBufWrPtr</link><para><emphasis>UART2 received buffer write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> <link linkend="_kernel_8c_1afdaa6e44d535e713283e148068e4189b">Uart3ReceiveBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KERNEL_FRAME for uart3.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1af6d21a1b9d99d453de22e4caf108e3ad">Uart3RcivBufRdPtr</link><para><emphasis>UART3 received buffer read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a9a65b97d5f1bb87798b4d2b1ae253557">Uart3RcivBufWrPtr</link><para><emphasis>UART3 received buffer write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> <link linkend="_kernel_8c_1af2437d9b9378091419caf60751e3a23d">Uart4ReceiveBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KERNEL_FRAME for uart4.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a520493841c3025c6a3937aaab9abfd51">Uart4RcivBufRdPtr</link><para><emphasis>UART4 received buffer read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a038a41ee82205b936566e2b06b5718d1">Uart4RcivBufWrPtr</link><para><emphasis>UART4 received buffer write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link> <link linkend="_kernel_8c_1ab30dfd49b2827416598d63514e6a610e">genSendBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KL_PACKET for generator.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link><para><emphasis>generator-send read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a71075a0b51c5fbe98badbe4f6c4f92b8">genSndWrPtr</link><para><emphasis>generator-send write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile <link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link> <link linkend="_kernel_8c_1ad884afc5c7cc2ef34cabb559187ccbdc">actSendBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KL_PACKET for actuator.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile int <link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link><para><emphasis>actuator-send read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile int <link linkend="_kernel_8c_1a223c74e59b34d2a826b2862850e6d232">actSndWrPtr</link><para><emphasis>actuator-send write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link> <link linkend="_kernel_8c_1a68e05fe4980f5146c2a77cbf52d590cf">wrkSendBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KL_PACKET for workstation.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1add3cf3af36f795e9417f7870a23562f5">wrkSndRdPtr</link><para><emphasis>workstation-send read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1ae1f5c8a91bd0d72baf0b17d5eea03535">wrkSndWrPtr</link><para><emphasis>workstation-send write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link> <link linkend="_kernel_8c_1aa7616a2399391851fa489893d1a1e23b">disSndBuf</link><para><emphasis>allocate \a DEVICE_BUFFER_SIZE of \a KL_PACKET for display.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link><para><emphasis>display-send read pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="_kernel_8c_1ad943a225011e2c6a36915c9067ca111d">disSndWrPtr</link><para><emphasis>display-send write pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="structjsmn__parser">jsmn_parser</link> <link linkend="_kernel_8c_1a07a65543a451fd3c61397332baa54aef">_parser</link><para><emphasis>JSON parser instance from jsmn.c.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structjsmntok__t">jsmntok_t</link> <link linkend="_kernel_8c_1aa7be1644f671af19abd6c01662fa3425">tokens</link><para><emphasis>JSON tokes paresed by \a _parser are stored inside tokens.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="struct_d_e_v_i_c_e___s_l_o_t">DEVICE_SLOT</link> <link linkend="_kernel_8c_1a351b6ce917d3748bc1cfaa09c60f89a3">_SLOTS</link><para><emphasis>for each device type there is one slot on the kernel</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char <link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link><para><emphasis>a temporary accumulator array for holding the received messages from uart1</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char <link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link><para><emphasis>a temporary accumulator array for holding the received messages from uart2</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char <link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link><para><emphasis>a temporary accumulator array for holding the received messages from uart3</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char <link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link><para><emphasis>a temporary accumulator array for holding the received messages from uart4</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>InstrumentStart <link linkend="_kernel_8c_1a056c6b29e3facb6cb70e0a15f57f4a5c">_startupFunction</link><para><emphasis>after successful bootup, kernel calls _startupFunction</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1a5251a4fd7e61ad6a4da92e8e8278362d">genSendMutex</link><para><emphasis>generator send buffer mutex.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1a0b1bfc7e0a865a44fd6fbc889a4097f0">actMutex</link><para><emphasis>actuator send buffer mutex.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1a2a469597d0a271004b8c32f9522d2132">disMutex</link><para><emphasis>display send buffer mutex.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1aee5a841a4efd80d4d9c4778b90bc13b8">uart1ReceiveMutex</link><para><emphasis>mutex for uart1 receive buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1a57631cf06c4598d2e81707d2fd37158a">uart2ReceiveMutex</link><para><emphasis>mutex for uart2 receive buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1a4a56c9e6290938a6cf02d5b369b8c397">uart3ReceiveMutex</link><para><emphasis>mutex for uart3 receive buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>volatile bool <link linkend="_kernel_8c_1a4b475ea06e9d33be01d87e5b4e8c2140">uart4ReceiveMutex</link><para><emphasis>mutex for uart4 receive buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="_kernel_8c_1ac38d232accc6bb4b21601a3b5edd7f1c">u1MsgSize</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="_kernel_8c_1a3cc9e2f28db4046ec17de88d2d4fe6f8">u2MsgSize</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="_kernel_8c_1a873c5611262ab607676d595fd7037aaf">u3MsgSize</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="_kernel_8c_1ad2fabbe0004c5f6173a6aa57d8548fff">u4MsgSize</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a0c4128cc61b6311392f8616b91da75fe">KL_ClearKernelMemory</link> (
)<para><emphasis>kernel private function.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link> (
<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> _frame)<para><emphasis>kernal private function.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a2be230c5110e54df15c7c9815b8a5d2b">KL_StartDispacherEngine</link> (
)<para><emphasis>starts the dispacher engine to start dispatch the buffers contents.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a50b8810e4526728644323c40fb681e9f">KL_DistributeFrames</link> (
)<para><emphasis>the dispacher engin executes KL_DistributeFrames periodically.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a125c74ce934e9777b99e811f0ff51ca8">EnqueueFrameIntoSendBuffer</link> (
<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link> buffer, <link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> * frame, int * index, bool * mutex)<para><emphasis>private function that enqueue frame into send buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link> (
<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> buffer, <link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> * frame, int * index, bool * mutex)<para><emphasis>private function that enqueue frame into receive buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1ac24ba3cc0417bbd139f78f26f594d847">KL_Dispacher</link> (
<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> * frame)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a08ea5e9ea1b3912b83a3ef84018b7099">KL_UART1MessageReceiveHandler</link> (
)<para><emphasis>kernel internal event handler for uart1.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a06efb2246d13a903e3452e6ac47dcbea">KL_UART2MessageReceiveHandler</link> (
)<para><emphasis>kernel internal event handler for uart2.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a2d4df0b6ce2b96a6f858e9f5af5a3389">KL_UART3MessageReceiveHandler</link> (
)<para><emphasis>kernel internal event handler for uart3.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1aebf7e73baddeceb1782644513e5e3048">KL_UART4MessageReceiveHandler</link> (
)<para><emphasis>kernel internal event handler for uart4.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1abfb44ecc19e20a4c8df5901ffaa79e93">KL_Timer1Interrupt</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a6fa687e39b416d7d42b3365f89a20160">KL_SendFrame</link> (
<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link> * frame)<para><emphasis>proxy function for dispatching frames made by APIs.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1afb489dd6da8fe88cf4a97f5c5e072927">KL_RegisterDevice</link> (
<link linkend="struct_d_e_v_i_c_e___s_l_o_t">DEVICE_SLOT</link> slot)<para><emphasis>register a device into kernel.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1af01826d33dbf7faf2832db87998f8d47">KL_Bootup</link> (
)<para><emphasis>bootup kernel.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_kernel_8c_1a90ae338762233fac549a147face7891d">KL_RegisterInstrument</link> (
InstrumentStart function)<para><emphasis>register instrument&apos;s start function.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>

<para>implement xPOST kernel. </para>

<para>Messages produced by device&apos;s API and send to Kernel and the kernel delivers them to the port and vice versa. Messages are divided into two types: Real-time which are sent immadiately and normal messages which are piled up into the device buffer and sent by kernel&apos;s dispacher engine. Each message is array of charachters. The maximum size of the array is tunable inside the kernel via <emphasis role="bold">MAX_MSG_SIZE</emphasis>. If a device message length was equal zero then the kernel assumes that the message was C-Style charachter string. In other words, the message is terminated by a &apos;\0&apos;. So, during enlisting and sending the operation is continued up until the first &apos;\0&apos; is hit. If the message length where not equal to zero, then kernel automatically reads, enlist and transmit it up to a specific message length (see also <link linkend="_connection_map_8h">ConnectionMap.h</link>). Each device type has a specified amount of buffer for sending the message to the device. The device buffer is static array with fixed size. We have tested dynamic memory allocation, but we noticed some problems during runtime. For this, version we have used this static array, but we are planning for turning it into dynamic memory allocation approach for the future implementations. Device buffer is filled in circular linked list fasion. It would be better to seperate the implementaion in a separate file instead of hard coding it inside this kernel file and It is planned for future version.</para>

<para><itemizedlist>
<listitem>
<para>Abrivations<orderedlist>
<listitem>
<para>gen: Generator Len: Length</para>
</listitem><listitem>
<para>act: Actuator</para>
</listitem><listitem>
<para>wks: Workstation</para>
</listitem><listitem>
<para>ptr: Pointer</para>
</listitem><listitem>
<para>buf: Buffer</para>
</listitem><listitem>
<para>msg: Message</para>
</listitem><listitem>
<para>Acc: Accumulator</para>
</listitem><listitem>
<para>Len: Length</para>
</listitem><listitem>
<para>trc: Trace</para>
</listitem></orderedlist>
</para>
</listitem></itemizedlist>
</para>

<para><formalpara><title>Author: </title>

<para>Altay Brusan </para>
<simplesect/>
<para>Aytac Durmaz </para>
</formalpara>
<formalpara><title>Version: </title>

<para>0.5a </para>
</formalpara>
<formalpara><title>Copyright: </title>

<para>&amp;copy 2018 Bogazici University 
<literallayout>
</literallayout>
 License: GNU Public License. </para>
</formalpara>
</para>
    <para>Definition in file C:/Users/Altay/Documents/Altium/Projects/SyncBox/Work/Bogazici University/SyncBox/V3I1/Software/PIC24 Firmware/firmware/Kernel.c</para>
    </simplesect>
    <literallayout><computeroutput>
1 
39 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_kernel_8h">kernel.h</link>&quot;</emphasis>
40 <emphasis class="preprocessor">#include&#32;&quot;jsmn.h&quot;</emphasis>
41 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_connection_map_8h">ConnectionMap.h</link>&quot;</emphasis>
42 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_p_i_c24e_def_8h">PIC24eDef.h</link>&quot;</emphasis>
43 <emphasis class="preprocessor">#include&#32;&lt;stdbool.h&gt;</emphasis>
44 
<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">46 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;=&#32;35;
<link linkend="_kernel_8c_1aed005504e2719145cb789100005b650b">48 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1aed005504e2719145cb789100005b650b">JSON_TOKEN_CARDINALITY</link>&#32;=&#32;128;
<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">50 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>&#32;=&#32;30;
51 
<link linkend="struct_k_l___p_a_c_k_e_t">55 </link><emphasis class="keyword">typedef</emphasis>&#32;<emphasis class="keyword">struct</emphasis>
56 {
<link linkend="struct_k_l___p_a_c_k_e_t_1a4bd0c15b86a62771c26a2364683d7192">57 </link>&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;pData[<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>];&#32;
<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">58 </link>&#32;&#32;&#32;&#32;<emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>;&#32;&#32;&#32;&#32;&#32;&#32;
59 }&#32;<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link>;
60 
61 
62 
<link linkend="_kernel_8c_1ab1a887fd4bcd916fb3d84abdb4d655d4">69 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;&#32;<link linkend="_kernel_8c_1ab1a887fd4bcd916fb3d84abdb4d655d4">Uart1ReceiveBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1a7a2438664f1cb67837e070d7c4da6ccc">75 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1afe0dd5676314b5ed5d547a671e9a2c30">Uart1RcivBufRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1a7a2438664f1cb67837e070d7c4da6ccc">Uart1RcivBufWrPtr</link>&#32;=&#32;0;&#32;
76 
<link linkend="_kernel_8c_1a9a3fdabb4306658c4c597099d690e7ea">87 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;&#32;<link linkend="_kernel_8c_1a9a3fdabb4306658c4c597099d690e7ea">Uart2ReceiveBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1a343aa6e0e887dbc857fa45f632949d56">93 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1a896503a45cde815b86bef2ad724e454e">Uart2RcivBufRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1a343aa6e0e887dbc857fa45f632949d56">Uart2RcivBufWrPtr</link>&#32;=&#32;0;&#32;
94 
<link linkend="_kernel_8c_1afdaa6e44d535e713283e148068e4189b">105 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;&#32;<link linkend="_kernel_8c_1afdaa6e44d535e713283e148068e4189b">Uart3ReceiveBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1a9a65b97d5f1bb87798b4d2b1ae253557">111 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1af6d21a1b9d99d453de22e4caf108e3ad">Uart3RcivBufRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1a9a65b97d5f1bb87798b4d2b1ae253557">Uart3RcivBufWrPtr</link>&#32;=&#32;0;&#32;
112 
117 
<link linkend="_kernel_8c_1af2437d9b9378091419caf60751e3a23d">124 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;&#32;<link linkend="_kernel_8c_1af2437d9b9378091419caf60751e3a23d">Uart4ReceiveBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1a038a41ee82205b936566e2b06b5718d1">130 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1a520493841c3025c6a3937aaab9abfd51">Uart4RcivBufRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1a038a41ee82205b936566e2b06b5718d1">Uart4RcivBufWrPtr</link>&#32;=&#32;0;&#32;
131 
136 
<link linkend="_kernel_8c_1ab30dfd49b2827416598d63514e6a610e">143 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link>&#32;&#32;<link linkend="_kernel_8c_1ab30dfd49b2827416598d63514e6a610e">genSendBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1a71075a0b51c5fbe98badbe4f6c4f92b8">149 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1a71075a0b51c5fbe98badbe4f6c4f92b8">genSndWrPtr</link>&#32;=&#32;0;&#32;
150 
154 
<link linkend="_kernel_8c_1ad884afc5c7cc2ef34cabb559187ccbdc">161 </link><emphasis class="keyword">volatile</emphasis>&#32;<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link>&#32;&#32;<link linkend="_kernel_8c_1ad884afc5c7cc2ef34cabb559187ccbdc">actSendBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1a223c74e59b34d2a826b2862850e6d232">167 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1a223c74e59b34d2a826b2862850e6d232">actSndWrPtr</link>&#32;=&#32;0;&#32;
168 
172 
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<link linkend="_kernel_8c_1a68e05fe4980f5146c2a77cbf52d590cf">180 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link>&#32;&#32;<link linkend="_kernel_8c_1a68e05fe4980f5146c2a77cbf52d590cf">wrkSendBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
<link linkend="_kernel_8c_1ae1f5c8a91bd0d72baf0b17d5eea03535">186 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1add3cf3af36f795e9417f7870a23562f5">wrkSndRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1ae1f5c8a91bd0d72baf0b17d5eea03535">wrkSndWrPtr</link>&#32;=&#32;0;
187 
191 
192 
<link linkend="_kernel_8c_1aa7616a2399391851fa489893d1a1e23b">199 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link>&#32;&#32;<link linkend="_kernel_8c_1aa7616a2399391851fa489893d1a1e23b">disSndBuf</link>[<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>];
200 
<link linkend="_kernel_8c_1ad943a225011e2c6a36915c9067ca111d">206 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>&#32;=&#32;0,&#32;<link linkend="_kernel_8c_1ad943a225011e2c6a36915c9067ca111d">disSndWrPtr</link>&#32;=&#32;0;
207 
<link linkend="_kernel_8c_1a07a65543a451fd3c61397332baa54aef">215 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="structjsmn__parser">jsmn_parser</link>&#32;<link linkend="_kernel_8c_1a07a65543a451fd3c61397332baa54aef">_parser</link>;
<link linkend="_kernel_8c_1aa7be1644f671af19abd6c01662fa3425">219 </link><link linkend="structjsmntok__t">jsmntok_t</link>&#32;<link linkend="_kernel_8c_1aa7be1644f671af19abd6c01662fa3425">tokens</link>[<link linkend="_kernel_8c_1aed005504e2719145cb789100005b650b">JSON_TOKEN_CARDINALITY</link>];
220 
<link linkend="_kernel_8c_1a351b6ce917d3748bc1cfaa09c60f89a3">226 </link><link linkend="struct_d_e_v_i_c_e___s_l_o_t">DEVICE_SLOT</link>&#32;<link linkend="_kernel_8c_1a351b6ce917d3748bc1cfaa09c60f89a3">_SLOTS</link>[__DEVICE_TYPES_COUNT];
227 
<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">231 </link><emphasis class="keywordtype">char</emphasis>&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>[<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>];
<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">235 </link><emphasis class="keywordtype">char</emphasis>&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>[<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>];
<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">239 </link><emphasis class="keywordtype">char</emphasis>&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>[<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>];
<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">243 </link><emphasis class="keywordtype">char</emphasis>&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>[<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>];
244 
<link linkend="_kernel_8c_1a056c6b29e3facb6cb70e0a15f57f4a5c">249 </link>InstrumentStart&#32;<link linkend="_kernel_8c_1a056c6b29e3facb6cb70e0a15f57f4a5c">_startupFunction</link>&#32;=&#32;0;
250 
251 <emphasis class="comment">//******************************System&#32;Resources********************************</emphasis>
252 
<link linkend="_kernel_8c_1a5251a4fd7e61ad6a4da92e8e8278362d">257 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1a5251a4fd7e61ad6a4da92e8e8278362d">genSendMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
258 
<link linkend="_kernel_8c_1a0b1bfc7e0a865a44fd6fbc889a4097f0">263 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1a0b1bfc7e0a865a44fd6fbc889a4097f0">actMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
264 
<link linkend="_kernel_8c_1a2a469597d0a271004b8c32f9522d2132">269 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1a2a469597d0a271004b8c32f9522d2132">disMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
270 
<link linkend="_kernel_8c_1aee5a841a4efd80d4d9c4778b90bc13b8">275 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1aee5a841a4efd80d4d9c4778b90bc13b8">uart1ReceiveMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
276 
<link linkend="_kernel_8c_1a57631cf06c4598d2e81707d2fd37158a">281 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1a57631cf06c4598d2e81707d2fd37158a">uart2ReceiveMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
282 
<link linkend="_kernel_8c_1a4a56c9e6290938a6cf02d5b369b8c397">287 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1a4a56c9e6290938a6cf02d5b369b8c397">uart3ReceiveMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
288 
<link linkend="_kernel_8c_1a4b475ea06e9d33be01d87e5b4e8c2140">293 </link><emphasis class="keyword">volatile</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="_kernel_8c_1a4b475ea06e9d33be01d87e5b4e8c2140">uart4ReceiveMutex</link>&#32;=&#32;<emphasis class="keyword">false</emphasis>;
294 <emphasis class="comment">//******************************Private&#32;Functions*******************************</emphasis>
295 
<link linkend="_kernel_8c_1a0c4128cc61b6311392f8616b91da75fe">300 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a0c4128cc61b6311392f8616b91da75fe">KL_ClearKernelMemory</link>()
301 {
302 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;idx&#32;=&#32;0;
303 &#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>,&#32;0x00,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
304 &#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>,&#32;0x00,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
305 &#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>,&#32;0x00,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
306 &#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>,&#32;0x00,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
307 
308 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;initialize&#32;IO&#32;buffers</emphasis>
309 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(idx&#32;=&#32;0;&#32;idx&#32;&lt;&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>;&#32;idx++)
310 &#32;&#32;&#32;&#32;{
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(genSendBuf[idx].pData,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genSendBuf[idx].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>&#32;=&#32;0;
313 
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(actSendBuf[idx].pData,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actSendBuf[idx].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>&#32;=&#32;0;
316 
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(wrkSendBuf[idx].pData,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wrkSendBuf[idx].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>&#32;=&#32;0;
319 
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(disSndBuf[idx].pData,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disSndBuf[idx].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>&#32;=&#32;0;
322 
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart1ReceiveBuf[idx].MESSAGE_LENGTH&#32;=&#32;0;
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart4ReceiveBuf[idx].MESSAGE_LENGTH&#32;=&#32;0;
325 &#32;&#32;&#32;&#32;}
326 }
327 
<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">334 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame)
335 {
336 
337 <emphasis class="preprocessor">#if&#32;build==debug</emphasis>
338 &#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugMsg(&quot;\r&#32;&#32;&#32;&#32;SEARCHING&#32;SLOT...&quot;);</emphasis>
339 <emphasis class="preprocessor">#endif</emphasis>
340 
341 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
342 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;=&#32;__DEVICE_TYPES_COUNT;&#32;i++)
343 &#32;&#32;&#32;&#32;{
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;the&#32;callback&#32;slot&#32;is&#32;not&#32;empty</emphasis>
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(_SLOTS[i].device&#32;==&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>)
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//KERNEL_FRAME&#32;_frame;</emphasis>
348 
349 <emphasis class="preprocessor">#if&#32;build==debug</emphasis>
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;&#32;SendDebugMsg(&quot;\r&#32;SLOT&#32;FOUND!&quot;);</emphasis>
351 <emphasis class="preprocessor">#endif</emphasis>
352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//_frame.F_SENDER&#32;=&#32;device;</emphasis>
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//_frame.F_TYPE&#32;=&#32;UNSTRUCTURED;&#32;//&#32;kernel&#32;do&#32;not&#32;pars&#32;the&#32;received&#32;msg</emphasis>
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//_frame.FRAME_MESSAGE&#32;=&#32;message;</emphasis>
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_SLOTS[i].<link linkend="struct_d_e_v_i_c_e___s_l_o_t_1a2e75310ca6d52cb0e1d07a1000a86436">handler</link>(_frame);
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
358 &#32;&#32;&#32;&#32;}
359 }
360 
361 
<link linkend="_kernel_8c_1a2be230c5110e54df15c7c9815b8a5d2b">368 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a2be230c5110e54df15c7c9815b8a5d2b">KL_StartDispacherEngine</link>()&#32;{
369 
370 &#32;&#32;&#32;&#32;T2CON&#32;=&#32;0x00;
371 &#32;&#32;&#32;&#32;T3CON&#32;=&#32;0x0;
372 &#32;&#32;&#32;&#32;TMR2&#32;=&#32;0;
373 &#32;&#32;&#32;&#32;TMR3&#32;=&#32;0;
374 &#32;&#32;&#32;&#32;T3IE_bit&#32;=&#32;1;
375 &#32;&#32;&#32;&#32;T3IF_bit&#32;=&#32;0;
376 &#32;&#32;&#32;&#32;T3IP_0_bit&#32;=&#32;1;
377 &#32;&#32;&#32;&#32;T3IP_1_bit&#32;=&#32;1;
378 &#32;&#32;&#32;&#32;T3IP_2_bit&#32;=&#32;1;
379 &#32;&#32;&#32;&#32;PR3&#32;=&#32;106;
380 &#32;&#32;&#32;&#32;PR2&#32;=&#32;53290;
381 &#32;&#32;&#32;&#32;T2CONbits.TON&#32;=&#32;1;
382 &#32;&#32;&#32;&#32;T2CONbits.T32&#32;=&#32;1;
383 
384 
385 }
386 
<link linkend="_kernel_8c_1a50b8810e4526728644323c40fb681e9f">394 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a50b8810e4526728644323c40fb681e9f">KL_DistributeFrames</link>()
395 {
396 
397 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;_index&#32;=&#32;0;
398 
399 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;First&#32;Device:&#32;GENERATOR</emphasis>
400 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;if&#32;mutex&#32;is&#32;free&#32;?</emphasis>
401 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a5251a4fd7e61ad6a4da92e8e8278362d">genSendMutex</link>&#32;==&#32;<emphasis class="keyword">false</emphasis>)
402 &#32;&#32;&#32;&#32;{
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;take&#32;a&#32;pointer&#32;to&#32;the&#32;generator&#32;send&#32;buffer</emphasis>
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;DO&#32;NOT&#32;DIRECTLY&#32;USE&#32;THE&#32;actSendBuf.&#32;IT&#32;WILL&#32;NOT&#32;WORK!!!</emphasis>
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>*&#32;xLen&#32;=&#32;&amp;genSendBuf[<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>;
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>*&#32;xPtr&#32;=&#32;genSendBuf[<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>].<link linkend="struct_k_l___p_a_c_k_e_t_1a4bd0c15b86a62771c26a2364683d7192">pData</link>;
407 
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;what&#32;is&#32;the&#32;generator&#32;message&#32;length?</emphasis>
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(*xLen&#32;==&#32;0)
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;contol&#32;message&#32;length</emphasis>
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(strlen(xPtr)&#32;!=&#32;0)
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;message&#32;exists</emphasis>
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;until&#32;hit&#32;c-style&#32;string&#32;termination&#32;charachter</emphasis>
416 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;SEND&#32;TO&#32;GENERATOR:&#32;&#32;&quot;</emphasis>);
418 <emphasis class="preprocessor">#endif</emphasis>
419 
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;until&#32;&#32;hit&#32;the&#32;C-style&#32;string&#32;termination&#32;charachter</emphasis>
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;what&#32;if&#32;the&#32;terminating&#32;string&#32;was&#32;something&#32;else?</emphasis>
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(xPtr[_index]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>)
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
425 
426 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(xPtr[_index]);
428 <emphasis class="preprocessor">#endif</emphasis>
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ad2731d221b525ebf2d261ca509b1cdd7">SendToGenerator</link>(xPtr[_index]);
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
432 
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer</emphasis>
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(xPtr,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>&#32;-&#32;1);
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;not&#32;necessary&#32;for&#32;here.&#32;protect&#32;against&#32;any&#32;possible&#32;trash&#32;values</emphasis>
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xLen&#32;=&#32;0;
437 
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;circular&#32;buffer&#32;pointer&#32;re-allocation</emphasis>
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;=&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;+&#32;1;&#32;<emphasis class="comment">//&#32;proceed&#32;one&#32;step</emphasis>
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;message&#32;by&#32;the&#32;amount&#32;of&#32;its&#32;length</emphasis>
452 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;SEND&#32;TO&#32;GENERATOR:&#32;&#32;&quot;</emphasis>);
454 <emphasis class="preprocessor">#endif</emphasis>
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(_index&#32;&lt;=&#32;*xLen)
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
458 
459 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(xPtr[_index]);
461 <emphasis class="preprocessor">#endif</emphasis>
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ad2731d221b525ebf2d261ca509b1cdd7">SendToGenerator</link>(xPtr[_index]);
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
465 
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer</emphasis>
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(xPtr,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>&#32;-&#32;1);
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xLen&#32;=&#32;0;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;this&#32;is&#32;must!</emphasis>
469 
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;relocate&#32;circular&#32;buffer&#32;pointer&#32;</emphasis>
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;=&#32;<link linkend="_kernel_8c_1a1b88577a7d57988730e509f4f9614ae5">genSndRdPtr</link>&#32;+&#32;1;
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
480 &#32;&#32;&#32;&#32;}
481 
482 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Second&#32;Device:&#32;Actuator</emphasis>
483 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;if&#32;mutex&#32;is&#32;free?</emphasis>
484 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a0b1bfc7e0a865a44fd6fbc889a4097f0">actMutex</link>&#32;==&#32;<emphasis class="keyword">false</emphasis>)
485 &#32;&#32;&#32;&#32;{
486 
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;take&#32;a&#32;pointer&#32;to&#32;the&#32;actuator&#32;send&#32;buffer</emphasis>
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;DO&#32;NOT&#32;DIRECTLY&#32;USE&#32;THE&#32;actSendBuf.&#32;IT&#32;WILL&#32;NOT&#32;WORK!!!</emphasis>
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>*&#32;xLen&#32;=&#32;&amp;actSendBuf[<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>;
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>*&#32;xPtr&#32;=&#32;actSendBuf[<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>].<link linkend="struct_k_l___p_a_c_k_e_t_1a4bd0c15b86a62771c26a2364683d7192">pData</link>;
491 
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//what&#32;is&#32;the&#32;actuator&#32;message&#32;length?</emphasis>
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(*xLen&#32;==&#32;0)
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;zero&#32;length&#32;messages:&#32;</emphasis>
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;a)&#32;send&#32;til&#32;hit&#32;C-Style&#32;null&#32;termination&#32;charachter</emphasis>
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;b)&#32;nothing&#32;to&#32;send.</emphasis>
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(strlen(xPtr)&#32;!=&#32;0)
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;message&#32;exists</emphasis>
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;until&#32;hit&#32;C-Style&#32;string&#32;termination&#32;string</emphasis>
502 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;&#32;SEND&#32;TO&#32;ACTUATOR&#32;:&#32;&#32;&quot;</emphasis>);
504 <emphasis class="preprocessor">#endif</emphasis>
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(xPtr[_index]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>)
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
507 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(xPtr[_index]);
509 <emphasis class="preprocessor">#endif</emphasis>
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ac359f38d30e6b036b02bb4320b4ebc96">SendToActuator</link>(xPtr[_index]);
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
513 
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer</emphasis>
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(xPtr,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>&#32;-&#32;1);
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;not&#32;necessary,&#32;to&#32;make&#32;sure&#32;not&#32;trash&#32;value&#32;exists</emphasis>
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xLen&#32;=&#32;0;
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//circular&#32;buffer</emphasis>
519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;=&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;+&#32;1;
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;sends&#32;message&#32;by&#32;the&#32;amount&#32;of&#32;its&#32;length</emphasis>
532 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;&#32;&#32;&#32;&#32;&gt;&gt;&#32;SEND&#32;TO&#32;ACTUATOR&#32;:&#32;&quot;</emphasis>);
534 <emphasis class="preprocessor">#endif</emphasis>
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(_index&#32;&lt;&#32;*xLen)
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
538 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(xPtr[_index]);
540 <emphasis class="preprocessor">#endif</emphasis>
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ac359f38d30e6b036b02bb4320b4ebc96">SendToActuator</link>(xPtr[_index]);
542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
544 
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer&#32;&amp;&#32;message&#32;length</emphasis>
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(xPtr,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>&#32;-&#32;1);
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xLen&#32;=&#32;0;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;this&#32;is&#32;a&#32;must!</emphasis>
548 
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;=&#32;<link linkend="_kernel_8c_1a86868421d574a221701eaf5da3805714">actSndRdPtr</link>&#32;+&#32;1;
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}emphasis class="comment">//&#32;relocate&#32;circular&#32;buffer&#32;pointer</emphasis>
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
558 &#32;&#32;&#32;&#32;}
559 
560 
561 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Third&#32;Device:&#32;Display</emphasis>
562 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;if&#32;mutex&#32;is&#32;free</emphasis>
563 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a2a469597d0a271004b8c32f9522d2132">disMutex</link>&#32;==&#32;<emphasis class="keyword">false</emphasis>)
564 &#32;&#32;&#32;&#32;{
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;control&#32;message&#32;length</emphasis>
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].iLen&#32;==&#32;0)
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Two&#32;cases:</emphasis>
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;a)&#32;Send&#32;until&#32;hit&#32;C-Style&#32;null&#32;terminating&#32;char</emphasis>
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;b)&#32;Nothing&#32;to&#32;send</emphasis>
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(strlen((disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].pData))&#32;!=&#32;0)
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;message&#32;exists</emphasis>
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;until&#32;hit&#32;C-Style&#32;string&#32;termination&#32;string</emphasis>
575 
576 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;DISPLAY&#32;MESSAGE:&#32;&#32;&quot;</emphasis>);
578 <emphasis class="preprocessor">#endif</emphasis>
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(((<emphasis class="keywordtype">char</emphasis>*)((disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>]).pData))[_index]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>)
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
581 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(((<emphasis class="keywordtype">char</emphasis>*)((disSndBuf[disSndRdPtr]).pData))[_index]);
583 <emphasis class="preprocessor">#endif</emphasis>
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1abcf5d591cde4bb9a39ee64180a181ede">SendToDisplay</link>(((<emphasis class="keywordtype">char</emphasis>*)((disSndBuf[disSndRdPtr]).pData))[_index]);
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
587 
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer</emphasis>
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(disSndBuf[disSndRdPtr].pData,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;not&#32;necessary,&#32;to&#32;make&#32;sure&#32;no&#32;trash&#32;value&#32;exists</emphasis>
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actSendBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>&#32;=&#32;0;
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;circular&#32;buffer</emphasis>
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(disSndRdPtr&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;disSndRdPtr&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disSndRdPtr&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disSndRdPtr&#32;=&#32;disSndRdPtr&#32;+&#32;1;
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;all&#32;available&#32;chars&#32;in&#32;message</emphasis>
606 
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;SEND&#32;TO&#32;DISPLAY&#32;:&#32;&quot;</emphasis>);
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(_index&#32;&lt;&#32;disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].iLen)
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
611 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;display</emphasis>
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(((<emphasis class="keywordtype">char</emphasis>*)disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].pData)[_index]);
613 <emphasis class="preprocessor">#endif</emphasis>
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1abcf5d591cde4bb9a39ee64180a181ede">SendToDisplay</link>(((<emphasis class="keywordtype">char</emphasis>*)disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].pData)[_index]);
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
617 
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer&#32;&amp;&#32;message&#32;length</emphasis>
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset((<emphasis class="keywordtype">char</emphasis>*)disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].pData,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disSndBuf[<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>].<link linkend="struct_k_l___p_a_c_k_e_t_1a55ef7c6f306bac934811fad4a60756c5">iLen</link>&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;this&#32;is&#32;a&#32;must!</emphasis>
621 
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;relocate&#32;circular&#32;buffer&#32;pointer</emphasis>
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>&#32;=&#32;<link linkend="_kernel_8c_1a31d8d459627c50a7054f1536602f1e9e">disSndRdPtr</link>&#32;+&#32;1;
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
632 &#32;&#32;&#32;&#32;}
633 
634 
635 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1aee5a841a4efd80d4d9c4778b90bc13b8">uart1ReceiveMutex</link>&#32;==&#32;<emphasis class="keyword">false</emphasis>)
636 &#32;&#32;&#32;&#32;{
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(Uart1ReceiveBuf[<link linkend="_kernel_8c_1afe0dd5676314b5ed5d547a671e9a2c30">Uart1RcivBufRdPtr</link>].MESSAGE_LENGTH&#32;!=&#32;0)
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(Uart1ReceiveBuf[<link linkend="_kernel_8c_1afe0dd5676314b5ed5d547a671e9a2c30">Uart1RcivBufRdPtr</link>]);
640 
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugChr(Uart1ReceiveBuf[Uart1RcivBufRdPtr].FRAME_MESSAGE[0]);</emphasis>
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugChr(Uart1ReceiveBuf[Uart1RcivBufRdPtr].FRAME_MESSAGE[1]);</emphasis>
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;clear&#32;buffer</emphasis>
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//memset(&#32;Uart1ReceiveBuf[Uart1RcivBufRdPtr].FRAME_MESSAGE,&#32;&apos;\0&apos;,&#32;Uart1ReceiveBuf[Uart1RcivBufRdPtr].MESSAGE_LENGTH&#32;);</emphasis>
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(Uart1ReceiveBuf[Uart1RcivBufRdPtr].FRAME_MESSAGE,&#32;Uart1ReceiveBuf[Uart1RcivBufRdPtr].MESSAGE_LENGTH);
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart1ReceiveBuf[<link linkend="_kernel_8c_1afe0dd5676314b5ed5d547a671e9a2c30">Uart1RcivBufRdPtr</link>].MESSAGE_LENGTH&#32;=&#32;0;
647 
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;circular&#32;buffer&#32;pointer&#32;re-allocation</emphasis>
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(Uart1RcivBufRdPtr&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;Uart1RcivBufRdPtr&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart1RcivBufRdPtr&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart1RcivBufRdPtr&#32;=&#32;Uart1RcivBufRdPtr&#32;+&#32;1;&#32;<emphasis class="comment">//&#32;proceed&#32;one&#32;step</emphasis>
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
658 &#32;&#32;&#32;&#32;}
659 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;uart2Receive</emphasis>
660 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;uart3Receive</emphasis>
661 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_kernel_8c_1a4b475ea06e9d33be01d87e5b4e8c2140">uart4ReceiveMutex</link>&#32;==&#32;<emphasis class="keyword">false</emphasis>)
662 &#32;&#32;&#32;&#32;{
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(Uart4ReceiveBuf[<link linkend="_kernel_8c_1a520493841c3025c6a3937aaab9abfd51">Uart4RcivBufRdPtr</link>].MESSAGE_LENGTH&#32;!=&#32;0)
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(Uart4ReceiveBuf[<link linkend="_kernel_8c_1a520493841c3025c6a3937aaab9abfd51">Uart4RcivBufRdPtr</link>]);
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(Uart4ReceiveBuf[Uart4RcivBufRdPtr].FRAME_MESSAGE,&#32;Uart4ReceiveBuf[Uart4RcivBufRdPtr].MESSAGE_LENGTH);
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart4ReceiveBuf[<link linkend="_kernel_8c_1a520493841c3025c6a3937aaab9abfd51">Uart4RcivBufRdPtr</link>].MESSAGE_LENGTH&#32;=&#32;0;
668 
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;circular&#32;buffer&#32;pointer&#32;re-allocation</emphasis>
670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(Uart4RcivBufRdPtr&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;Uart4RcivBufRdPtr&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart4RcivBufRdPtr&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head</emphasis>
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Uart4RcivBufRdPtr&#32;=&#32;Uart4RcivBufRdPtr&#32;+&#32;1;&#32;<emphasis class="comment">//&#32;proceed&#32;one&#32;step</emphasis>
677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
679 &#32;&#32;&#32;&#32;}
680 
681 }
682 
<link linkend="_kernel_8c_1a125c74ce934e9777b99e811f0ff51ca8">690 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a125c74ce934e9777b99e811f0ff51ca8">EnqueueFrameIntoSendBuffer</link>(<link linkend="struct_k_l___p_a_c_k_e_t">KL_PACKET</link>&#32;buffer[],&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>*&#32;frame,&#32;<emphasis class="keywordtype">int</emphasis>*&#32;index,&#32;<emphasis class="keywordtype">bool</emphasis>*&#32;mutex)
691 {
692 &#32;&#32;&#32;&#32;<emphasis class="comment">//int&#32;i&#32;=&#32;0;</emphasis>
693 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(frame-&gt;MESSAGE_LENGTH&#32;==&#32;0)
694 &#32;&#32;&#32;&#32;{
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mutex&#32;=&#32;<emphasis class="keyword">true</emphasis>;
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy((<emphasis class="keywordtype">char</emphasis>*)buffer[*index].pData,&#32;frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>);&#32;<emphasis class="comment">//&#32;copy&#32;message</emphasis>
697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mutex&#32;=&#32;<emphasis class="keyword">false</emphasis>;
698 &#32;&#32;&#32;&#32;}
699 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
700 &#32;&#32;&#32;&#32;{
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mutex&#32;=&#32;<emphasis class="keyword">true</emphasis>;
702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<emphasis class="keywordtype">char</emphasis>*)(buffer[*index].pData),&#32;frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>,&#32;(*frame)-&gt;MESSAGE_LENGTH);<emphasis class="comment">//&#32;MAX_MSG_SIZE);</emphasis>
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(buffer[*index]).iLen&#32;=&#32;(*frame)-&gt;MESSAGE_LENGTH;
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*mutex&#32;=&#32;<emphasis class="keyword">false</emphasis>;
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugMsg(&quot;\r\r&quot;);</emphasis>
706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//for&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;frame-&gt;MESSAGE_LENGTH;&#32;i++)</emphasis>
707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//{</emphasis>
708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendDebugChr(((char*)buffer[*index].pData)[i]);</emphasis>
709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//SendDebugChr(frame-&gt;FRAME_MESSAGE[i]);</emphasis>
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//}</emphasis>
711 &#32;&#32;&#32;&#32;}
712 
713 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;relocate&#32;circular&#32;buffer&#32;pointer</emphasis>
714 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(*index&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;*index&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
715 &#32;&#32;&#32;&#32;{
716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*index&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head&#32;</emphasis>
717 &#32;&#32;&#32;&#32;}
718 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
719 &#32;&#32;&#32;&#32;{
720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*index&#32;=&#32;(*index)&#32;+&#32;1;
721 &#32;&#32;&#32;&#32;}
722 
723 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;whithout&#32;this&#32;delay,&#32;the&#32;timer&#32;can&#32;not&#32;catch&#32;new&#32;messages!!!</emphasis>
724 &#32;&#32;&#32;&#32;Delay_ms(1);
725 }
726 
<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">734 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;buffer[],&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>*&#32;frame,&#32;<emphasis class="keywordtype">int</emphasis>*&#32;index,&#32;<emphasis class="keywordtype">bool</emphasis>*&#32;mutex)
735 {
736 &#32;&#32;&#32;&#32;<emphasis class="comment">//int&#32;i&#32;=&#32;0;</emphasis>
737 
738 &#32;&#32;&#32;&#32;*mutex&#32;=&#32;<emphasis class="keyword">true</emphasis>;
739 &#32;&#32;&#32;&#32;buffer[*index]-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;(<emphasis class="keywordtype">char</emphasis>*)malloc((*frame)-&gt;MESSAGE_LENGTH&#32;+&#32;1);&#32;<emphasis class="comment">//&#32;extra&#32;space&#32;for&#32;null&#32;terminating&#32;string</emphasis>
740 &#32;&#32;&#32;&#32;memcpy(buffer[*index].FRAME_MESSAGE,&#32;frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>,&#32;(*frame)-&gt;MESSAGE_LENGTH);
741 &#32;&#32;&#32;&#32;(buffer[*index]).MESSAGE_LENGTH&#32;=&#32;(*frame)-&gt;MESSAGE_LENGTH;
742 &#32;&#32;&#32;&#32;buffer[*index].<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>;
743 &#32;&#32;&#32;&#32;buffer[*index].<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>;
744 &#32;&#32;&#32;&#32;buffer[*index]-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[(*frame)-&gt;MESSAGE_LENGTH]&#32;=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;
745 &#32;&#32;&#32;&#32;*mutex&#32;=&#32;<emphasis class="keyword">false</emphasis>;
746 
747 &#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugMsg(&quot;FRAME&#32;ENQUEUED:&#32;&#32;&#32;&quot;);</emphasis>
748 &#32;&#32;&#32;&#32;<emphasis class="comment">//for&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;frame-&gt;MESSAGE_LENGTH;&#32;i++)</emphasis>
749 &#32;&#32;&#32;&#32;<emphasis class="comment">//{</emphasis>
750 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendDebugChr(buffer[*index].FRAME_MESSAGE[i]);</emphasis>
751 &#32;&#32;&#32;&#32;<emphasis class="comment">//}</emphasis>
752 
753 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;relocate&#32;circular&#32;buffer&#32;pointer</emphasis>
754 &#32;&#32;&#32;&#32;if&#32;(*index&#32;==&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>&#32;-&#32;1&#32;||&#32;*index&#32;&gt;=&#32;<link linkend="_kernel_8c_1a24c014602906305014a892e9297270b7">DEVICE_BUFFER_SIZE</link>)
755 &#32;&#32;&#32;&#32;{
756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*index&#32;=&#32;0;&#32;&#32;<emphasis class="comment">//&#32;return&#32;to&#32;the&#32;head&#32;</emphasis>
757 &#32;&#32;&#32;&#32;}
758 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
759 &#32;&#32;&#32;&#32;{
760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*index&#32;=&#32;(*index)&#32;+&#32;1;
761 &#32;&#32;&#32;&#32;}
762 
763 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;whithout&#32;this&#32;delay,&#32;the&#32;timer&#32;can&#32;not&#32;catch&#32;new&#32;messages!!!</emphasis>
764 &#32;&#32;&#32;&#32;Delay_ms(1);
765 }
766 
767 
768 <emphasis class="keywordtype">void</emphasis>&#32;KL_Dispacher(<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>*&#32;frame)
769 {
770 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;_index&#32;=&#32;0;
771 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1a3d27a4b137640aaa3b112a0c236bf934">F_PRIORITY</link>&#32;==&#32;REALTIME_FRAME)
772 &#32;&#32;&#32;&#32;{
773 
774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;start&#32;execution&#32;thread&#32;immidiately</emphasis>
775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">switch</emphasis>&#32;(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>)
776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;WORKSTATION:
778 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
779 
780 <emphasis class="preprocessor">#endif</emphasis>
781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;GENERATOR:
783 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugMsg(&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;GEN&#32;HIGH&#32;PRIO:&#32;&#32;&quot;);</emphasis>
785 <emphasis class="preprocessor">#endif</emphasis>
786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(frame-&gt;MESSAGE_LENGTH&#32;!=&#32;0)
787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Send&#32;by&#32;the&#32;message&#32;length</emphasis>
789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(_index&#32;=&#32;0;&#32;_index&#32;&lt;&#32;frame-&gt;MESSAGE_LENGTH;&#32;_index++)
790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
791 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugChr(frame-&gt;FRAME_MESSAGE[_index]);</emphasis>
793 <emphasis class="preprocessor">#endif&#32;</emphasis>
794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ad2731d221b525ebf2d261ca509b1cdd7">SendToGenerator</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Send&#32;til&#32;hit&#32;null&#32;terminating&#32;string</emphasis>
800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]&#32;!=&#32;0)
802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
803 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugChr(frame-&gt;FRAME_MESSAGE[_index]);</emphasis>
805 <emphasis class="preprocessor">#endif</emphasis>
806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ad2731d221b525ebf2d261ca509b1cdd7">SendToGenerator</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
809 
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
811 
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;ACTUATOR:
814 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;ACT&#32;HIGH&#32;PRIO:&#32;&#32;&quot;</emphasis>);
816 <emphasis class="preprocessor">#endif</emphasis>
817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(frame-&gt;MESSAGE_LENGTH&#32;!=&#32;0)
818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;by&#32;amount&#32;of&#32;message&#32;length</emphasis>
820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(_index&#32;=&#32;0;&#32;_index&#32;&lt;&#32;frame-&gt;MESSAGE_LENGTH;&#32;_index++)
821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
822 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
824 <emphasis class="preprocessor">#endif&#32;</emphasis>
825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ac359f38d30e6b036b02bb4320b4ebc96">SendToActuator</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Send&#32;till&#32;hit&#32;null&#32;terminating&#32;string</emphasis>
831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]&#32;!=&#32;0)
833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
834 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
836 <emphasis class="preprocessor">#endif&#32;</emphasis>
837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1ac359f38d30e6b036b02bb4320b4ebc96">SendToActuator</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
841 
842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;COLLIMATOR:
844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;later</emphasis>
845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;&#32;DETECTOR:
847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;later</emphasis>
848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;VENTILATOR:
850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;later</emphasis>
851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;ALARM:
853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;later</emphasis>
854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;COOLING:
856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;TODO:&#32;implement&#32;later</emphasis>
857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;DISPLAY:
859 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;&gt;&gt;DISP&#32;HIGH&#32;PRIO:&#32;&#32;&quot;</emphasis>);
861 <emphasis class="preprocessor">#endif</emphasis>
862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]&#32;!=&#32;0)
864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
865 <emphasis class="preprocessor">#if&#32;build&#32;==&#32;debug</emphasis>
866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
867 <emphasis class="preprocessor">#endif</emphasis>
868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1abcf5d591cde4bb9a39ee64180a181ede">SendToDisplay</link>(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>[_index]);
869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index++;
870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
873 &#32;&#32;&#32;&#32;}
874 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
875 &#32;&#32;&#32;&#32;{
876 
877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;enqueue&#32;the&#32;message&#32;into&#32;the&#32;device&#32;buffer</emphasis>
878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">switch</emphasis>&#32;(frame-&gt;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>)
879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;&#32;GENERATOR:
881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a125c74ce934e9777b99e811f0ff51ca8">EnqueueFrameIntoSendBuffer</link>(genSendBuf,&#32;frame,&#32;&amp;<link linkend="_kernel_8c_1a71075a0b51c5fbe98badbe4f6c4f92b8">genSndWrPtr</link>,&#32;&amp;<link linkend="_kernel_8c_1a5251a4fd7e61ad6a4da92e8e8278362d">genSendMutex</link>);
882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;&#32;&#32;&#32;&#32;ACTUATOR:
884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a125c74ce934e9777b99e811f0ff51ca8">EnqueueFrameIntoSendBuffer</link>(actSendBuf,&#32;frame,&#32;&amp;<link linkend="_kernel_8c_1a223c74e59b34d2a826b2862850e6d232">actSndWrPtr</link>,&#32;&amp;<link linkend="_kernel_8c_1a0b1bfc7e0a865a44fd6fbc889a4097f0">actMutex</link>);
885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;WORKSTATION:
887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;&#32;&#32;COLLIMATOR:
889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;&#32;&#32;&#32;&#32;DETECTOR:
891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;DISPLAY:
893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a125c74ce934e9777b99e811f0ff51ca8">EnqueueFrameIntoSendBuffer</link>(disSndBuf,&#32;frame,&#32;&amp;<link linkend="_kernel_8c_1ad943a225011e2c6a36915c9067ca111d">disSndWrPtr</link>,&#32;&amp;<link linkend="_kernel_8c_1a2a469597d0a271004b8c32f9522d2132">disMutex</link>);
894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
896 &#32;&#32;&#32;&#32;}
897 }
898 
899 
900 <emphasis class="comment">//*******************&#32;Interrupt&#32;Handlers**************************************</emphasis>
901 
902 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;u1MsgSize&#32;=&#32;0;
<link linkend="_kernel_8c_1a08ea5e9ea1b3912b83a3ef84018b7099">904 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a08ea5e9ea1b3912b83a3ef84018b7099">KL_UART1MessageReceiveHandler</link>()&#32;iv&#32;IVT_ADDR_U1RXINTERRUPT&#32;{
905 
906 &#32;&#32;&#32;&#32;U1RXIF_bit&#32;=&#32;0;
907 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(UART1_Data_Ready())&#32;<emphasis class="comment">//&#32;this&#32;is&#32;MUST;&#32;do&#32;not&#32;remove&#32;it</emphasis>
908 &#32;&#32;&#32;&#32;{
909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;_recivedChar&#32;=&#32;UART1_Read();
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugChr(_recivedChar);</emphasis>
911 
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Is&#32;UART1&#32;Fixed&#32;length&#32;message&#32;device?</emphasis>
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1a3af69910ac5de5a229e3486211ec9944">UART1_MSG_LENGTH</link>&#32;!=&#32;0)
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(u1MsgSize&#32;!=&#32;<link linkend="_connection_map_8h_1a3af69910ac5de5a229e3486211ec9944">UART1_MSG_LENGTH</link>)
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>[u1MsgSize]&#32;=&#32;_recivedChar;
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u1MsgSize++;
919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
922 
923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a19a251b46b04cee3fd8612bf2c5fb3d6">UART1MappedDevice</link>;
925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>;
927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u1MsgSize;
928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart1ReceiveBuf,
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a7a2438664f1cb67837e070d7c4da6ccc">Uart1RcivBufWrPtr</link>,
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1aee5a841a4efd80d4d9c4778b90bc13b8">uart1ReceiveMutex</link>);
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u1MsgSize&#32;=&#32;0;
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;is&#32;there&#32;any&#32;delimiter&#32;for&#32;uart1?</emphasis>
939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1adae2579ea095f57cda20d3a3d9b93fcb">UART1_DELIMITER</link>&#32;!=&#32;0)
940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(_recivedChar&#32;!=&#32;<link linkend="_connection_map_8h_1adae2579ea095f57cda20d3a3d9b93fcb">UART1_DELIMITER</link>&#32;&amp;&amp;&#32;u1MsgSize&#32;&lt;&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>)
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>[u1MsgSize]&#32;=&#32;_recivedChar;
944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u1MsgSize++;
945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
948 
949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a19a251b46b04cee3fd8612bf2c5fb3d6">UART1MappedDevice</link>;
951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>;
953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u1MsgSize;
954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(_frame);
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u1MsgSize&#32;=&#32;0;
956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;there&#32;is&#32;no&#32;delimitor&#32;nor&#32;the&#32;messages&#32;length&#32;is&#32;fixed</emphasis>
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;so,send&#32;the&#32;received&#32;byte&#32;to&#32;the&#32;device&#32;which&#32;is&#32;mapped&#32;on&#32;UART1</emphasis>
963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;the&#32;device&#32;will&#32;decide&#32;what&#32;to&#32;do&#32;with&#32;that.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>[0]&#32;=&#32;_recivedChar;
966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a19a251b46b04cee3fd8612bf2c5fb3d6">UART1MappedDevice</link>;
967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>;
969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;1;
970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart1ReceiveBuf,
971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a7a2438664f1cb67837e070d7c4da6ccc">Uart1RcivBufWrPtr</link>,
973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1aee5a841a4efd80d4d9c4778b90bc13b8">uart1ReceiveMutex</link>);
974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u1MsgSize&#32;=&#32;0;
975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a7d2f781d2c7db9e4280ef84feb814cbe">_uart1AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;1);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
978 
979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(U1STA.OERR&#32;=&#32;1)
980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U1STA.OERR&#32;=&#32;0;
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U1STA.FERR&#32;=&#32;0;
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
984 &#32;&#32;&#32;&#32;}
985 }
986 
987 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;u2MsgSize&#32;=&#32;0;
<link linkend="_kernel_8c_1a06efb2246d13a903e3452e6ac47dcbea">989 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a06efb2246d13a903e3452e6ac47dcbea">KL_UART2MessageReceiveHandler</link>()&#32;iv&#32;IVT_ADDR_U2RXINTERRUPT&#32;{
990 
991 
992 &#32;&#32;&#32;&#32;U2RXIF_bit&#32;=&#32;0;
993 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(UART2_Data_Ready())&#32;<emphasis class="comment">//&#32;this&#32;is&#32;MUST;&#32;do&#32;not&#32;remove&#32;it</emphasis>
994 &#32;&#32;&#32;&#32;{
995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;_recivedChar&#32;=&#32;UART2_Read();
996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//SendDebugChr(_recivedChar);</emphasis>
997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;messages&#32;are&#32;FIXED&#32;length&#32;or&#32;not?</emphasis>
998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1aa5a18ef2cd8bdee21c3bdf2b93dee3c9">UART2_MSG_LENGTH</link>&#32;!=&#32;0)
999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(u2MsgSize&#32;!=&#32;<link linkend="_connection_map_8h_1aa5a18ef2cd8bdee21c3bdf2b93dee3c9">UART2_MSG_LENGTH</link>)
1001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>[u2MsgSize]&#32;=&#32;_recivedChar;
1003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u2MsgSize++;
1004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1aa41dfef3ad002d29bf9dd7185e264e6c">UART2MappedDevice</link>;
1009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>;
1011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u2MsgSize;
1012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart2ReceiveBuf,
1013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
1014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a343aa6e0e887dbc857fa45f632949d56">Uart2RcivBufWrPtr</link>,
1015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a57631cf06c4598d2e81707d2fd37158a">uart2ReceiveMutex</link>);
1016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u2MsgSize&#32;=&#32;0;
1017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;is&#32;there&#32;any&#32;delimiter&#32;for&#32;uart2?</emphasis>
1023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1a8b99c3a3ceadd01a51f5a211d4ebc4b3">UART2_DELIMITER</link>&#32;!=&#32;0)
1024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(_recivedChar&#32;!=&#32;<link linkend="_connection_map_8h_1a8b99c3a3ceadd01a51f5a211d4ebc4b3">UART2_DELIMITER</link>&#32;&amp;&amp;&#32;u2MsgSize&#32;&lt;&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>)
1026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>[u2MsgSize]&#32;=&#32;_recivedChar;
1028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u2MsgSize++;
1029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1aa41dfef3ad002d29bf9dd7185e264e6c">UART2MappedDevice</link>;
1034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>;
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u2MsgSize;
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart2ReceiveBuf,
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a343aa6e0e887dbc857fa45f632949d56">Uart2RcivBufWrPtr</link>,
1040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a57631cf06c4598d2e81707d2fd37158a">uart2ReceiveMutex</link>);
1041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u2MsgSize&#32;=&#32;0;
1042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1044 
1045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;there&#32;is&#32;no&#32;delimitor&#32;nor&#32;the&#32;messages&#32;length&#32;is&#32;fixed</emphasis>
1049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;so,send&#32;the&#32;received&#32;byte&#32;to&#32;the&#32;device&#32;which&#32;is&#32;mapped&#32;on&#32;UART2</emphasis>
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;the&#32;device&#32;will&#32;decide&#32;what&#32;to&#32;do&#32;with&#32;that.</emphasis>
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>[0]&#32;=&#32;_recivedChar;
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1aa41dfef3ad002d29bf9dd7185e264e6c">UART2MappedDevice</link>;
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>;
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;1;
1057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(_frame);
1058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ae052b1be02736763a2ec65b5b30e2ab4">_uart2AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);
1059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1061 
1062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(U2STA.OERR&#32;=&#32;1)
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U2STA.OERR&#32;=&#32;0;
1065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U2STA.FERR&#32;=&#32;0;
1066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1067 &#32;&#32;&#32;&#32;}
1068 
1069 }
1070 
1071 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;u3MsgSize&#32;=&#32;0;
<link linkend="_kernel_8c_1a2d4df0b6ce2b96a6f858e9f5af5a3389">1073 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a2d4df0b6ce2b96a6f858e9f5af5a3389">KL_UART3MessageReceiveHandler</link>()&#32;iv&#32;IVT_ADDR_U3RXINTERRUPT&#32;{
1074 
1075 
1076 &#32;&#32;&#32;&#32;U3RXIF_bit&#32;=&#32;0;
1077 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(UART3_Data_Ready())&#32;<emphasis class="comment">//&#32;this&#32;is&#32;MUST;&#32;do&#32;not&#32;remove&#32;it</emphasis>
1078 &#32;&#32;&#32;&#32;{
1079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;_recivedChar&#32;=&#32;UART3_Read();
1080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;messages&#32;are&#32;FIXED&#32;size&#32;length&#32;or&#32;not</emphasis>
1081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1a4704e5492e5de6f023d519e911d7ba43">UART3_MSG_LENGTH</link>&#32;!=&#32;0)
1082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(u3MsgSize&#32;!=&#32;<link linkend="_connection_map_8h_1a4704e5492e5de6f023d519e911d7ba43">UART3_MSG_LENGTH</link>)
1084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>[u3MsgSize]&#32;=&#32;_recivedChar;
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u3MsgSize++;
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a6ffacf4569652e94c075afb464255015">UART3MappedDevice</link>;
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>;
1094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u3MsgSize;
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart3ReceiveBuf,
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
1097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a9a65b97d5f1bb87798b4d2b1ae253557">Uart3RcivBufWrPtr</link>,
1098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a4a56c9e6290938a6cf02d5b369b8c397">uart3ReceiveMutex</link>);
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u3MsgSize&#32;=&#32;0;
1100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;is&#32;there&#32;any&#32;delimitor&#32;for&#32;uart1?</emphasis>
1106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1a32717dfa7cc08af0494c325f1ec485f7">UART3_DELIMITER</link>&#32;!=&#32;0)
1107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(_recivedChar&#32;!=&#32;<link linkend="_connection_map_8h_1a32717dfa7cc08af0494c325f1ec485f7">UART3_DELIMITER</link>&#32;&amp;&amp;&#32;u3MsgSize&#32;&lt;&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>)
1109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>[u3MsgSize]&#32;=&#32;_recivedChar;
1111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u3MsgSize++;
1112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a6ffacf4569652e94c075afb464255015">UART3MappedDevice</link>;
1117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>;
1119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u3MsgSize;
1120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart3ReceiveBuf,
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a9a65b97d5f1bb87798b4d2b1ae253557">Uart3RcivBufWrPtr</link>,
1123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a4a56c9e6290938a6cf02d5b369b8c397">uart3ReceiveMutex</link>);
1124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u3MsgSize&#32;=&#32;0;
1125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1127 
1128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;there&#32;is&#32;no&#32;delimitor&#32;nor&#32;the&#32;messages&#32;length&#32;is&#32;fixed</emphasis>
1132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;so,send&#32;the&#32;received&#32;byte&#32;to&#32;the&#32;device&#32;which&#32;is&#32;mapped&#32;on&#32;UART1</emphasis>
1133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;the&#32;device&#32;will&#32;decide&#32;what&#32;to&#32;do&#32;with&#32;that.</emphasis>
1134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>[0]&#32;=&#32;_recivedChar;
1136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a6ffacf4569652e94c075afb464255015">UART3MappedDevice</link>;
1137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>;
1139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;1;
1140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(_frame);
1141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u3MsgSize&#32;=&#32;0;
1142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1ab27594ad37cac6e7fba076d307d1bee9">_uart3AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;1);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1145 
1146 
1147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(U3STA.OERR&#32;=&#32;1)
1148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U3STA.OERR&#32;=&#32;0;
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U3STA.FERR&#32;=&#32;0;
1151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1152 &#32;&#32;&#32;&#32;}
1153 }
1154 
1155 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;u4MsgSize&#32;=&#32;0;
<link linkend="_kernel_8c_1aebf7e73baddeceb1782644513e5e3048">1157 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1aebf7e73baddeceb1782644513e5e3048">KL_UART4MessageReceiveHandler</link>()&#32;iv&#32;IVT_ADDR_U4RXINTERRUPT&#32;{
1158 
1159 
1160 &#32;&#32;&#32;&#32;U4RXIF_bit&#32;=&#32;0;
1161 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(UART4_Data_Ready())&#32;<emphasis class="comment">//&#32;this&#32;is&#32;MUST;&#32;do&#32;not&#32;remove&#32;it</emphasis>
1162 &#32;&#32;&#32;&#32;{
1163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;_recivedChar&#32;=&#32;UART4_Read();
1164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a0959c4c87a8e202f9263a740604b5207">SendDebugChr</link>(_recivedChar);
1165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;messages&#32;are&#32;FIXED&#32;size&#32;length&#32;or&#32;not</emphasis>
1166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1af6ad5d197c564ad4a7d3a19ed76f362d">UART4_MSG_LENGTH</link>&#32;!=&#32;0)
1167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(u4MsgSize&#32;!=&#32;<link linkend="_connection_map_8h_1af6ad5d197c564ad4a7d3a19ed76f362d">UART4_MSG_LENGTH</link>)
1169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>[u4MsgSize]&#32;=&#32;_recivedChar;
1171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u4MsgSize++;
1172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a05502dd71095271c855ec569b862597d">UART4MappedDevice</link>;
1177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>;
1179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u4MsgSize;
1180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart4ReceiveBuf,
1181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
1182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a038a41ee82205b936566e2b06b5718d1">Uart4RcivBufWrPtr</link>,
1183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a4b475ea06e9d33be01d87e5b4e8c2140">uart4ReceiveMutex</link>);
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u4MsgSize&#32;=&#32;0;
1185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;is&#32;there&#32;any&#32;delimitor&#32;for&#32;uart4?</emphasis>
1191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="_connection_map_8h_1ae65f4ef2d52a2d8c491b20af3c56afbf">UART4_DELIMITER</link>&#32;!=&#32;0)
1192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(_recivedChar&#32;!=&#32;<link linkend="_connection_map_8h_1ae65f4ef2d52a2d8c491b20af3c56afbf">UART4_DELIMITER</link>&#32;&amp;&amp;&#32;u4MsgSize&#32;&lt;&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>)
1194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>[u4MsgSize]&#32;=&#32;_recivedChar;
1196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u4MsgSize++;
1197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a05502dd71095271c855ec569b862597d">UART4MappedDevice</link>;
1202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>;
1204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;u4MsgSize;
1205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a3af547b9656eb54f650875fd47e38da5">EnqueueFrameIntoReceiveBuffer</link>(Uart4ReceiveBuf,
1206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;_frame,
1207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a038a41ee82205b936566e2b06b5718d1">Uart4RcivBufWrPtr</link>,
1208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_kernel_8c_1a4b475ea06e9d33be01d87e5b4e8c2140">uart4ReceiveMutex</link>);
1209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u4MsgSize&#32;=&#32;0;
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;<link linkend="_kernel_8c_1af176e32c7a1ac429d45241dbcda652f9">MAX_MSG_SIZE</link>);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1212 
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>
1215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;there&#32;is&#32;no&#32;delimitor&#32;nor&#32;the&#32;messages&#32;length&#32;is&#32;fixed</emphasis>
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;send&#32;the&#32;received&#32;byte&#32;to&#32;the&#32;device&#32;which&#32;is&#32;mapped&#32;on&#32;UART4</emphasis>
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;the&#32;device&#32;will&#32;decide&#32;what&#32;to&#32;do&#32;with&#32;that.</emphasis>
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;instead&#32;of&#32;queue-ing&#32;the&#32;byte,&#32;the&#32;byte&#32;is&#32;sent&#32;directly</emphasis>
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;to&#32;the&#32;handler.</emphasis>
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>&#32;_frame;
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>[0]&#32;=&#32;_recivedChar;
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae2d1e98376527216fa6ff53b940a7c7a">F_RECEIVER</link>&#32;=&#32;<link linkend="_connection_map_8h_1a05502dd71095271c855ec569b862597d">UART4MappedDevice</link>;
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1ae24624f2af7ede4b38b487a23cf5c947">F_TYPE</link>&#32;=&#32;<link linkend="_kernel_8h_1ae7bbafd20fabd9f3e1a4d5563f587487ac89ce62fe1fa4f8e316031d7754f478a">UNSTRUCTURED</link>;
1225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e_1adb33c1f45314f3a78597d889550e066c">FRAME_MESSAGE</link>&#32;=&#32;<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>;
1226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frame.MESSAGE_LENGTH&#32;=&#32;1;
1227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1aa9e1a6a114d8540f7e56b15f6469b390">KL_CallSlotHandler</link>(_frame);
1228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u4MsgSize&#32;=&#32;0;
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="_kernel_8c_1a86c056e2cac04b0ceaafc3e734a21c6e">_uart4AccBuf</link>,&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>,&#32;1);&#32;<emphasis class="comment">//clear&#32;buffer</emphasis>
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1232 
1233 
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(U4STA.OERR&#32;=&#32;1)
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U4STA.OERR&#32;=&#32;0;
1237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;U4STA.FERR&#32;=&#32;0;
1238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1239 &#32;&#32;&#32;&#32;}
1240 
1241 }
1242 
1243 <emphasis class="keywordtype">void</emphasis>&#32;KL_Timer1Interrupt()&#32;iv&#32;IVT_ADDR_T3INTERRUPT&#32;{
1244 &#32;&#32;&#32;&#32;T3IF_bit&#32;=&#32;0;
1245 &#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a50b8810e4526728644323c40fb681e9f">KL_DistributeFrames</link>();
1246 }
1247 
1248 <emphasis class="comment">//***********************&#32;Public&#32;functions&#32;************************************</emphasis>
1249 
<link linkend="_kernel_8h_1a2208f705266c6573e312dc94de1c36b1">1255 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a6fa687e39b416d7d42b3365f89a20160">KL_SendFrame</link>(<link linkend="struct_k_e_r_n_e_l___f_r_a_m_e">KERNEL_FRAME</link>*&#32;frame)
1256 {
1257 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;call&#32;Dispacher&#32;to&#32;decide&#32;is&#32;it&#32;high&#32;priority&#32;to&#32;execute&#32;the&#32;cmd</emphasis>
1258 &#32;&#32;&#32;&#32;KL_Dispacher(frame);
1259 }
1260 
<link linkend="_kernel_8h_1a6889b166b7a1eaada7823b212ce23162">1262 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1afb489dd6da8fe88cf4a97f5c5e072927">KL_RegisterDevice</link>(<link linkend="struct_d_e_v_i_c_e___s_l_o_t">DEVICE_SLOT</link>&#32;slot)
1263 {
1264 &#32;&#32;&#32;&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;_register&#32;=&#32;0;
1265 &#32;&#32;&#32;&#32;_SLOTS[_register]&#32;=&#32;slot;
1266 &#32;&#32;&#32;&#32;_register++;
1267 <emphasis class="preprocessor">#if&#32;build==debug</emphasis>
1268 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;&#32;&#32;&#32;DEVICE&#32;REGISTERED.&quot;</emphasis>);
1269 <emphasis class="preprocessor">#endif</emphasis>
1270 }
1271 
<link linkend="_kernel_8h_1af01826d33dbf7faf2832db87998f8d47">1273 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1af01826d33dbf7faf2832db87998f8d47">KL_Bootup</link>()
1274 {
1275 &#32;&#32;&#32;&#32;<emphasis class="comment">//int&#32;idx&#32;=&#32;0;</emphasis>
1276 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1ae3a202337f42562c2c9d8c5590f2c516">InitializePICSpeed</link>();
1277 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1aaf130db27820311746f51999dff00c31">InitializePICPins</link>();&#32;&#32;<emphasis class="comment">//&#32;ALWAYS&#32;THIS&#32;COMES&#32;FIRST</emphasis>
1278 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1a32666a085d5c95458d8c91c2b2e6949d">InitializeUARTS</link>();&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;ALWAYS&#32;THIS&#32;COMES&#32;AFTER</emphasis>
1279 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1afc875c0325fd3fe8c3f7c4340d7b5352">InitializeTimers</link>();
1280 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1ad0ce9dde945f8ffe9221f71a4b039a92">InitializeHeap</link>();
1281 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1aaed242339275920a4ddcc7ed19b7fac1">PrioritizeInterrupts</link>();
1282 &#32;&#32;&#32;&#32;<link linkend="_p_i_c24e_def_8h_1a1759f533ced7d6d880bd1e933b695678">InitializeBuzzer</link>();
1283 
1284 &#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a0c4128cc61b6311392f8616b91da75fe">KL_ClearKernelMemory</link>();
1285 
1286 &#32;&#32;&#32;&#32;<emphasis class="comment">//Play&#32;boot&#32;successful&#32;beep</emphasis>
1287 &#32;&#32;&#32;&#32;Sound_Play(1600,&#32;100);
1288 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r-----------------------&quot;</emphasis>);
1289 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;X-Ray&#32;Package&#32;Ordering&#32;&amp;&#32;Signal&#32;Transmitting&#32;(xPOST)&#32;kernel.&quot;</emphasis>);
1290 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;Version:&#32;0.5&quot;</emphasis>);
1291 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;Date:&#32;May,&#32;2018&quot;</emphasis>);
1292 <emphasis class="preprocessor">#if&#32;build==debug</emphasis>
1293 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r&#32;BOOTUP&#32;IN&#32;DEBUG&#32;MODE.&quot;</emphasis>);
1294 <emphasis class="preprocessor">#endif</emphasis>
1295 &#32;&#32;&#32;&#32;<link linkend="_connection_map_8h_1a057c92e4c30690f2618df7d1814fabf0">SendDebugMsg</link>(<emphasis class="stringliteral">&quot;\r-----------------------\r&quot;</emphasis>);
1296 &#32;&#32;&#32;&#32;Delay_ms(100);
1297 &#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a2be230c5110e54df15c7c9815b8a5d2b">KL_StartDispacherEngine</link>();
1298 &#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a056c6b29e3facb6cb70e0a15f57f4a5c">_startupFunction</link>();
1299 
1300 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(1)
1301 &#32;&#32;&#32;&#32;{
1302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">asm</emphasis>&#32;nop;
1303 &#32;&#32;&#32;&#32;}
1304 
1305 }
1306 
<link linkend="_kernel_8h_1a6e56804f0227fcd97cf46ec5d43cf385">1310 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="_kernel_8c_1a90ae338762233fac549a147face7891d">KL_RegisterInstrument</link>(InstrumentStart&#32;<emphasis class="keyword">function</emphasis>)
1311 {
1312 &#32;&#32;&#32;&#32;<link linkend="_kernel_8c_1a056c6b29e3facb6cb70e0a15f57f4a5c">_startupFunction</link>&#32;=&#32;<emphasis class="keyword">function</emphasis>;
1313 }
    </computeroutput></literallayout>
</section>
