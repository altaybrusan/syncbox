<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="jsmn_8c">
    <title>jsmn.c File Reference</title>
    <programlisting>#include &quot;jsmn.h&quot;</programlisting>
<para>Include dependency diagram for jsmn.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="jsmn_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for jsmn.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="jsmn_8c__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="structjsmntok__t">jsmntok_t</link> * <link linkend="jsmn_8c_1a0d7a964b95b65cd16699a355ede80394">jsmn_alloc_token</link> (
<link linkend="structjsmn__parser">jsmn_parser</link> * parser, <link linkend="structjsmntok__t">jsmntok_t</link> * tokens, size_t num_tokens)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="jsmn_8c_1a20b875e37a2a5c88888c6d80068715be">jsmn_fill_token</link> (
<link linkend="structjsmntok__t">jsmntok_t</link> * token, jsmntype_t type, int start, int end)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="jsmn_8c_1a4d1f29464811e2bbf5506fbe5c7ee9de">jsmn_parse_primitive</link> (
<link linkend="structjsmn__parser">jsmn_parser</link> * parser, const char * js, size_t len, <link linkend="structjsmntok__t">jsmntok_t</link> * tokens, size_t num_tokens)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="jsmn_8c_1a568f184e45bb9718270088e1e05a4264">jsmn_parse_string</link> (
<link linkend="structjsmn__parser">jsmn_parser</link> * parser, const char * js, size_t len, <link linkend="structjsmntok__t">jsmntok_t</link> * tokens, size_t num_tokens)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="jsmn_8c_1a774f985a9750a10c7e88304e30191e03">jsmn_parse</link> (
<link linkend="structjsmn__parser">jsmn_parser</link> * parser, const char * js, size_t len, <link linkend="structjsmntok__t">jsmntok_t</link> * tokens, unsigned int num_tokens)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="jsmn_8c_1a8d4a8b3ce5c3d600feea38615b5f9aa6">jsmn_init</link> (
<link linkend="structjsmn__parser">jsmn_parser</link> * parser)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file C:/Users/Altay/Documents/Altium/Projects/SyncBox/Work/Bogazici University/SyncBox/V3I1/Software/PIC24 Firmware/firmware/jsmn.c</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#include&#32;&quot;jsmn.h&quot;</emphasis>
2 
6 <emphasis class="keyword">static</emphasis>&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*jsmn_alloc_token(<link linkend="structjsmn__parser">jsmn_parser</link>&#32;*parser,
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*<link linkend="_kernel_8c_1aa7be1644f671af19abd6c01662fa3425">tokens</link>,&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;num_tokens)&#32;{
8 &#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*tok;
9 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(parser-&gt;toknext&#32;&gt;=&#32;num_tokens)&#32;{
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;NULL;
11 &#32;&#32;&#32;&#32;}
12 &#32;&#32;&#32;&#32;tok&#32;=&#32;&amp;tokens[parser-&gt;toknext++];
13 &#32;&#32;&#32;&#32;tok-&gt;start&#32;=&#32;tok-&gt;end&#32;=&#32;-1;
14 &#32;&#32;&#32;&#32;tok-&gt;size&#32;=&#32;0;
15 <emphasis class="preprocessor">#ifdef&#32;JSMN_PARENT_LINKS</emphasis>
16 &#32;&#32;&#32;&#32;tok-&gt;parent&#32;=&#32;-1;
17 <emphasis class="preprocessor">#endif</emphasis>
18 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;tok;
19 }
20 
24 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;jsmn_fill_token(<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*token,&#32;jsmntype_t&#32;type,
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;start,&#32;<emphasis class="keywordtype">int</emphasis>&#32;end)&#32;{
26 &#32;&#32;&#32;&#32;token-&gt;type&#32;=&#32;type;
27 &#32;&#32;&#32;&#32;token-&gt;start&#32;=&#32;start;
28 &#32;&#32;&#32;&#32;token-&gt;end&#32;=&#32;end;
29 &#32;&#32;&#32;&#32;token-&gt;size&#32;=&#32;0;
30 }
31 
35 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;jsmn_parse_primitive(<link linkend="structjsmn__parser">jsmn_parser</link>&#32;*parser,&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">char</emphasis>&#32;*js,
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;len,&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*tokens,&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;num_tokens)&#32;{
37 &#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*token;
38 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;start;
39 
40 &#32;&#32;&#32;&#32;start&#32;=&#32;parser-&gt;pos;
41 
42 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(;&#32;parser-&gt;pos&#32;&lt;&#32;len&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;&#32;parser-&gt;pos++)&#32;{
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">switch</emphasis>&#32;(js[parser-&gt;pos])&#32;{
44 <emphasis class="preprocessor">#ifndef&#32;JSMN_STRICT</emphasis>
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;In&#32;strict&#32;mode&#32;primitive&#32;must&#32;be&#32;followed&#32;by&#32;&quot;,&quot;&#32;or&#32;&quot;}&quot;&#32;or&#32;&quot;]&quot;&#32;*/</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;:&apos;</emphasis>:
47 <emphasis class="preprocessor">#endif</emphasis>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\t&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\r&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\n&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;&#32;&apos;</emphasis>&#32;:
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;,&apos;</emphasis>&#32;&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;]&apos;</emphasis>&#32;&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;}&apos;</emphasis>&#32;:
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">goto</emphasis>&#32;found;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(js[parser-&gt;pos]&#32;&lt;&#32;32&#32;||&#32;js[parser-&gt;pos]&#32;&gt;=&#32;127)&#32;{
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
56 &#32;&#32;&#32;&#32;}
57 <emphasis class="preprocessor">#ifdef&#32;JSMN_STRICT</emphasis>
58 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;In&#32;strict&#32;mode&#32;primitive&#32;must&#32;be&#32;followed&#32;by&#32;a&#32;comma/object/array&#32;*/</emphasis>
59 &#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
60 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_PART;
61 <emphasis class="preprocessor">#endif</emphasis>
62 
63 found:
64 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;==&#32;NULL)&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos--;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
67 &#32;&#32;&#32;&#32;}
68 &#32;&#32;&#32;&#32;token&#32;=&#32;jsmn_alloc_token(parser,&#32;tokens,&#32;num_tokens);
69 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token&#32;==&#32;NULL)&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_NOMEM;
72 &#32;&#32;&#32;&#32;}
73 &#32;&#32;&#32;&#32;jsmn_fill_token(token,&#32;JSMN_PRIMITIVE,&#32;start,&#32;parser-&gt;pos);
74 <emphasis class="preprocessor">#ifdef&#32;JSMN_PARENT_LINKS</emphasis>
75 &#32;&#32;&#32;&#32;token-&gt;parent&#32;=&#32;parser-&gt;toksuper;
76 <emphasis class="preprocessor">#endif</emphasis>
77 &#32;&#32;&#32;&#32;parser-&gt;pos--;
78 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
79 }
80 
84 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;jsmn_parse_string(<link linkend="structjsmn__parser">jsmn_parser</link>&#32;*parser,&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">char</emphasis>&#32;*js,
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;len,&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*tokens,&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;num_tokens)&#32;{
86 &#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*token;
87 
88 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;start&#32;=&#32;parser-&gt;pos;
89 
90 &#32;&#32;&#32;&#32;parser-&gt;pos++;
91 
92 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Skip&#32;starting&#32;quote&#32;*/</emphasis>
93 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(;&#32;parser-&gt;pos&#32;&lt;&#32;len&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;&#32;parser-&gt;pos++)&#32;{
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;c&#32;=&#32;js[parser-&gt;pos];
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Quote:&#32;end&#32;of&#32;string&#32;*/</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis class="charliteral">&apos;\&quot;&apos;</emphasis>)&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;==&#32;NULL)&#32;{
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;jsmn_alloc_token(parser,&#32;tokens,&#32;num_tokens);
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token&#32;==&#32;NULL)&#32;{
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_NOMEM;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jsmn_fill_token(token,&#32;JSMN_STRING,&#32;start+1,&#32;parser-&gt;pos);
107 <emphasis class="preprocessor">#ifdef&#32;JSMN_PARENT_LINKS</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token-&gt;parent&#32;=&#32;parser-&gt;toksuper;
109 <emphasis class="preprocessor">#endif</emphasis>
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Backslash:&#32;Quoted&#32;symbol&#32;expected&#32;*/</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis class="charliteral">&apos;\\&apos;</emphasis>&#32;&amp;&amp;&#32;parser-&gt;pos&#32;+&#32;1&#32;&lt;&#32;len)&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;i;
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos++;
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">switch</emphasis>&#32;(js[parser-&gt;pos])&#32;{
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Allowed&#32;escaped&#32;symbols&#32;*/</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\&quot;&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;/&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\\&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;b&apos;</emphasis>&#32;:
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;f&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;r&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;n&apos;</emphasis>&#32;&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;t&apos;</emphasis>&#32;:
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Allows&#32;escaped&#32;symbol&#32;\uXXXX&#32;*/</emphasis>
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;u&apos;</emphasis>:
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos++;
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4&#32;&amp;&amp;&#32;parser-&gt;pos&#32;&lt;&#32;len&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;&#32;i++)&#32;{
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;If&#32;it&#32;isn&apos;t&#32;a&#32;hex&#32;character&#32;we&#32;have&#32;an&#32;error&#32;*/</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(!((js[parser-&gt;pos]&#32;&gt;=&#32;48&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;&lt;=&#32;57)&#32;||&#32;<emphasis class="comment">/*&#32;0-9&#32;*/</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(js[parser-&gt;pos]&#32;&gt;=&#32;65&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;&lt;=&#32;70)&#32;||&#32;<emphasis class="comment">/*&#32;A-F&#32;*/</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(js[parser-&gt;pos]&#32;&gt;=&#32;97&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;&lt;=&#32;102)))&#32;{&#32;<emphasis class="comment">/*&#32;a-f&#32;*/</emphasis>
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos++;
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos--;
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Unexpected&#32;symbol&#32;*/</emphasis>
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">default</emphasis>:
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
143 &#32;&#32;&#32;&#32;}
144 &#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;start;
145 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_PART;
146 }
147 
151 <emphasis class="keywordtype">int</emphasis>&#32;jsmn_parse(<link linkend="structjsmn__parser">jsmn_parser</link>&#32;*parser,&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">char</emphasis>&#32;*js,&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;len,
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*tokens,&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;num_tokens)&#32;{
153 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;r;
154 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;i;
155 &#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*token;
156 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;count&#32;=&#32;parser-&gt;toknext;
157 
158 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(;&#32;parser-&gt;pos&#32;&lt;&#32;len&#32;&amp;&amp;&#32;js[parser-&gt;pos]&#32;!=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;&#32;parser-&gt;pos++)&#32;{
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;c;
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jsmntype_t&#32;type;
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;js[parser-&gt;pos];
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">switch</emphasis>&#32;(c)&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;{&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;[&apos;</emphasis>:
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;==&#32;NULL)&#32;{
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;jsmn_alloc_token(parser,&#32;tokens,&#32;num_tokens);
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token&#32;==&#32;NULL)
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_NOMEM;
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(parser-&gt;toksuper&#32;!=&#32;-1)&#32;{
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens[parser-&gt;toksuper].size++;
174 <emphasis class="preprocessor">#ifdef&#32;JSMN_PARENT_LINKS</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token-&gt;parent&#32;=&#32;parser-&gt;toksuper;
176 <emphasis class="preprocessor">#endif</emphasis>
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token-&gt;type&#32;=&#32;(c&#32;==&#32;<emphasis class="charliteral">&apos;{&apos;</emphasis>&#32;?&#32;JSMN_OBJECT&#32;:&#32;JSMN_ARRAY);
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token-&gt;start&#32;=&#32;parser-&gt;pos;
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;parser-&gt;toknext&#32;-&#32;1;
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;}&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;]&apos;</emphasis>:
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;==&#32;NULL)
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;=&#32;(c&#32;==&#32;<emphasis class="charliteral">&apos;}&apos;</emphasis>&#32;?&#32;JSMN_OBJECT&#32;:&#32;JSMN_ARRAY);
186 <emphasis class="preprocessor">#ifdef&#32;JSMN_PARENT_LINKS</emphasis>
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(parser-&gt;toknext&#32;&lt;&#32;1)&#32;{
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;&amp;tokens[parser-&gt;toknext&#32;-&#32;1];
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(;;)&#32;{
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token-&gt;start&#32;!=&#32;-1&#32;&amp;&amp;&#32;token-&gt;end&#32;==&#32;-1)&#32;{
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token-&gt;type&#32;!=&#32;type)&#32;{
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token-&gt;end&#32;=&#32;parser-&gt;pos&#32;+&#32;1;
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;token-&gt;parent;
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token-&gt;parent&#32;==&#32;-1)&#32;{
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(token-&gt;type&#32;!=&#32;type&#32;||&#32;parser-&gt;toksuper&#32;==&#32;-1)&#32;{
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;&amp;tokens[token-&gt;parent];
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
208 <emphasis class="preprocessor">#else</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(i&#32;=&#32;parser-&gt;toknext&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)&#32;{
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;&amp;tokens[i];
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token-&gt;start&#32;!=&#32;-1&#32;&amp;&amp;&#32;token-&gt;end&#32;==&#32;-1)&#32;{
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token-&gt;type&#32;!=&#32;type)&#32;{
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;-1;
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token-&gt;end&#32;=&#32;parser-&gt;pos&#32;+&#32;1;
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Error&#32;if&#32;unmatched&#32;closing&#32;bracket&#32;*/</emphasis>
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(i&#32;==&#32;-1)&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&gt;=&#32;0;&#32;i--)&#32;{
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;&amp;tokens[i];
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(token-&gt;start&#32;!=&#32;-1&#32;&amp;&amp;&#32;token-&gt;end&#32;==&#32;-1)&#32;{
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;i;
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
229 <emphasis class="preprocessor">#endif</emphasis>
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\&quot;&apos;</emphasis>:
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;jsmn_parse_string(parser,&#32;js,&#32;len,&#32;tokens,&#32;num_tokens);
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(r&#32;&lt;&#32;0)&#32;<emphasis class="keywordflow">return</emphasis>&#32;r;
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(parser-&gt;toksuper&#32;!=&#32;-1&#32;&amp;&amp;&#32;tokens&#32;!=&#32;NULL)
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens[parser-&gt;toksuper].size++;
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\t&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\r&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;\n&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;&#32;&apos;</emphasis>:
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;:&apos;</emphasis>:
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;parser-&gt;toknext&#32;-&#32;1;
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;,&apos;</emphasis>:
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;!=&#32;NULL&#32;&amp;&amp;&#32;parser-&gt;toksuper&#32;!=&#32;-1&#32;&amp;&amp;
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens[parser-&gt;toksuper].type&#32;!=&#32;JSMN_ARRAY&#32;&amp;&amp;
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens[parser-&gt;toksuper].type&#32;!=&#32;JSMN_OBJECT)&#32;{
247 <emphasis class="preprocessor">#ifdef&#32;JSMN_PARENT_LINKS</emphasis>
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;tokens[parser-&gt;toksuper].parent;
249 <emphasis class="preprocessor">#else</emphasis>
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(i&#32;=&#32;parser-&gt;toknext&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)&#32;{
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens[i].type&#32;==&#32;JSMN_ARRAY&#32;||&#32;tokens[i].type&#32;==&#32;JSMN_OBJECT)&#32;{
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens[i].start&#32;!=&#32;-1&#32;&amp;&amp;&#32;tokens[i].end&#32;==&#32;-1)&#32;{
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;i;
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
258 <emphasis class="preprocessor">#endif</emphasis>
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
261 <emphasis class="preprocessor">#ifdef&#32;JSMN_STRICT</emphasis>
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;In&#32;strict&#32;mode&#32;primitives&#32;are:&#32;numbers&#32;and&#32;booleans&#32;*/</emphasis>
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;-&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;0&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;1&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;2&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;3&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;4&apos;</emphasis>:
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;5&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;6&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;7&apos;</emphasis>&#32;:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;8&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;9&apos;</emphasis>:
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;t&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;f&apos;</emphasis>:&#32;<emphasis class="keywordflow">case</emphasis>&#32;<emphasis class="charliteral">&apos;n&apos;</emphasis>&#32;:
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;And&#32;they&#32;must&#32;not&#32;be&#32;keys&#32;of&#32;the&#32;object&#32;*/</emphasis>
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;!=&#32;NULL&#32;&amp;&amp;&#32;parser-&gt;toksuper&#32;!=&#32;-1)&#32;{
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="structjsmntok__t">jsmntok_t</link>&#32;*t&#32;=&#32;&amp;tokens[parser-&gt;toksuper];
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(t-&gt;type&#32;==&#32;JSMN_OBJECT&#32;||
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(t-&gt;type&#32;==&#32;JSMN_STRING&#32;&amp;&amp;&#32;t-&gt;size&#32;!=&#32;0))&#32;{
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
274 <emphasis class="preprocessor">#else</emphasis>
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;In&#32;non-strict&#32;mode&#32;every&#32;unquoted&#32;value&#32;is&#32;a&#32;primitive&#32;*/</emphasis>
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">default</emphasis>:
277 <emphasis class="preprocessor">#endif</emphasis>
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;jsmn_parse_primitive(parser,&#32;js,&#32;len,&#32;tokens,&#32;num_tokens);
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(r&#32;&lt;&#32;0)&#32;<emphasis class="keywordflow">return</emphasis>&#32;r;
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(parser-&gt;toksuper&#32;!=&#32;-1&#32;&amp;&amp;&#32;tokens&#32;!=&#32;NULL)
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens[parser-&gt;toksuper].size++;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
284 
285 <emphasis class="preprocessor">#ifdef&#32;JSMN_STRICT</emphasis>
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Unexpected&#32;char&#32;in&#32;strict&#32;mode&#32;*/</emphasis>
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">default</emphasis>:
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_INVAL;
289 <emphasis class="preprocessor">#endif</emphasis>
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
291 &#32;&#32;&#32;&#32;}
292 
293 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens&#32;!=&#32;NULL)&#32;{
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(i&#32;=&#32;parser-&gt;toknext&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)&#32;{
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;Unmatched&#32;opened&#32;object&#32;or&#32;array&#32;*/</emphasis>
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(tokens[i].start&#32;!=&#32;-1&#32;&amp;&amp;&#32;tokens[i].end&#32;==&#32;-1)&#32;{
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;JSMN_ERROR_PART;
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
300 &#32;&#32;&#32;&#32;}
301 
302 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;count;
303 }
304 
309 <emphasis class="keywordtype">void</emphasis>&#32;jsmn_init(<link linkend="structjsmn__parser">jsmn_parser</link>&#32;*parser)&#32;{
310 &#32;&#32;&#32;&#32;parser-&gt;pos&#32;=&#32;0;
311 &#32;&#32;&#32;&#32;parser-&gt;toknext&#32;=&#32;0;
312 &#32;&#32;&#32;&#32;parser-&gt;toksuper&#32;=&#32;-1;
313 }
314 
    </computeroutput></literallayout>
</section>
